$date
	Fri Nov 22 21:47:16 2024
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var reg 8 # X_input [7:0] $end
$var reg 3 $ N_input [2:0] $end
$var reg 1 % start $end
$var wire 1 & result [31] $end
$var wire 1 ' result [30] $end
$var wire 1 ( result [29] $end
$var wire 1 ) result [28] $end
$var wire 1 * result [27] $end
$var wire 1 + result [26] $end
$var wire 1 , result [25] $end
$var wire 1 - result [24] $end
$var wire 1 . result [23] $end
$var wire 1 / result [22] $end
$var wire 1 0 result [21] $end
$var wire 1 1 result [20] $end
$var wire 1 2 result [19] $end
$var wire 1 3 result [18] $end
$var wire 1 4 result [17] $end
$var wire 1 5 result [16] $end
$var wire 1 6 result [15] $end
$var wire 1 7 result [14] $end
$var wire 1 8 result [13] $end
$var wire 1 9 result [12] $end
$var wire 1 : result [11] $end
$var wire 1 ; result [10] $end
$var wire 1 < result [9] $end
$var wire 1 = result [8] $end
$var wire 1 > result [7] $end
$var wire 1 ? result [6] $end
$var wire 1 @ result [5] $end
$var wire 1 A result [4] $end
$var wire 1 B result [3] $end
$var wire 1 C result [2] $end
$var wire 1 D result [1] $end
$var wire 1 E result [0] $end
$var wire 1 F calculation_done $end
$var wire 1 G overflow $end
$var wire 1 H ready $end
$var wire 1 I error $end
$var integer 32 J file $end

$scope module dut $end
$var parameter 32 K OUTPUT_WIDTH $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 N start $end
$var wire 1 O X [7] $end
$var wire 1 P X [6] $end
$var wire 1 Q X [5] $end
$var wire 1 R X [4] $end
$var wire 1 S X [3] $end
$var wire 1 T X [2] $end
$var wire 1 U X [1] $end
$var wire 1 V X [0] $end
$var wire 1 W N [2] $end
$var wire 1 X N [1] $end
$var wire 1 Y N [0] $end
$var wire 1 & Y [31] $end
$var wire 1 ' Y [30] $end
$var wire 1 ( Y [29] $end
$var wire 1 ) Y [28] $end
$var wire 1 * Y [27] $end
$var wire 1 + Y [26] $end
$var wire 1 , Y [25] $end
$var wire 1 - Y [24] $end
$var wire 1 . Y [23] $end
$var wire 1 / Y [22] $end
$var wire 1 0 Y [21] $end
$var wire 1 1 Y [20] $end
$var wire 1 2 Y [19] $end
$var wire 1 3 Y [18] $end
$var wire 1 4 Y [17] $end
$var wire 1 5 Y [16] $end
$var wire 1 6 Y [15] $end
$var wire 1 7 Y [14] $end
$var wire 1 8 Y [13] $end
$var wire 1 9 Y [12] $end
$var wire 1 : Y [11] $end
$var wire 1 ; Y [10] $end
$var wire 1 < Y [9] $end
$var wire 1 = Y [8] $end
$var wire 1 > Y [7] $end
$var wire 1 ? Y [6] $end
$var wire 1 @ Y [5] $end
$var wire 1 A Y [4] $end
$var wire 1 B Y [3] $end
$var wire 1 C Y [2] $end
$var wire 1 D Y [1] $end
$var wire 1 E Y [0] $end
$var wire 1 F valid $end
$var wire 1 H ready $end
$var wire 1 G overflow $end
$var wire 1 I error $end
$var wire 1 Z load_N $end
$var wire 1 [ load_X $end
$var wire 1 \ load_registers $end

$scope module ctrl $end
$var parameter 2 ] IDLE $end
$var parameter 2 ^ INIT $end
$var parameter 2 _ LOAD $end
$var parameter 2 ` CALC $end
$var wire 1 L clk $end
$var wire 1 M reset $end
$var wire 1 N start $end
$var wire 1 G overflow $end
$var wire 1 I error $end
$var wire 1 W N_input [2] $end
$var wire 1 X N_input [1] $end
$var wire 1 Y N_input [0] $end
$var wire 1 Z load_N $end
$var wire 1 [ load_X $end
$var wire 1 \ load_registers $end
$var wire 1 H ready $end
$var reg 1 a valid $end
$var reg 2 b current_state [1:0] $end
$var reg 2 c next_state [1:0] $end
$var reg 4 d calc_counter [3:0] $end
$upscope $end

$scope module dp $end
$var wire 1 L clk $end
$var wire 1 M reset $end
$var wire 1 N start $end
$var wire 1 O X_input [7] $end
$var wire 1 P X_input [6] $end
$var wire 1 Q X_input [5] $end
$var wire 1 R X_input [4] $end
$var wire 1 S X_input [3] $end
$var wire 1 T X_input [2] $end
$var wire 1 U X_input [1] $end
$var wire 1 V X_input [0] $end
$var wire 1 W N_input [2] $end
$var wire 1 X N_input [1] $end
$var wire 1 Y N_input [0] $end
$var wire 1 F valid $end
$var wire 1 H ready $end
$var wire 1 Z load_N $end
$var wire 1 [ load_X $end
$var wire 1 \ load_registers $end
$var wire 1 & result [31] $end
$var wire 1 ' result [30] $end
$var wire 1 ( result [29] $end
$var wire 1 ) result [28] $end
$var wire 1 * result [27] $end
$var wire 1 + result [26] $end
$var wire 1 , result [25] $end
$var wire 1 - result [24] $end
$var wire 1 . result [23] $end
$var wire 1 / result [22] $end
$var wire 1 0 result [21] $end
$var wire 1 1 result [20] $end
$var wire 1 2 result [19] $end
$var wire 1 3 result [18] $end
$var wire 1 4 result [17] $end
$var wire 1 5 result [16] $end
$var wire 1 6 result [15] $end
$var wire 1 7 result [14] $end
$var wire 1 8 result [13] $end
$var wire 1 9 result [12] $end
$var wire 1 : result [11] $end
$var wire 1 ; result [10] $end
$var wire 1 < result [9] $end
$var wire 1 = result [8] $end
$var wire 1 > result [7] $end
$var wire 1 ? result [6] $end
$var wire 1 @ result [5] $end
$var wire 1 A result [4] $end
$var wire 1 B result [3] $end
$var wire 1 C result [2] $end
$var wire 1 D result [1] $end
$var wire 1 E result [0] $end
$var wire 1 G overflow $end
$var wire 1 I error $end
$var wire 1 e coefficient_x [7] $end
$var wire 1 f coefficient_x [6] $end
$var wire 1 g coefficient_x [5] $end
$var wire 1 h coefficient_x [4] $end
$var wire 1 i coefficient_x [3] $end
$var wire 1 j coefficient_x [2] $end
$var wire 1 k coefficient_x [1] $end
$var wire 1 l coefficient_x [0] $end
$var wire 1 m polynomial_degree [2] $end
$var wire 1 n polynomial_degree [1] $end
$var wire 1 o polynomial_degree [0] $end
$var wire 1 p starting_stage_num [2] $end
$var wire 1 q starting_stage_num [1] $end
$var wire 1 r starting_stage_num [0] $end
$var wire 1 s stage0_num [2] $end
$var wire 1 t stage0_num [1] $end
$var wire 1 u stage0_num [0] $end
$var wire 1 v stage1_num [2] $end
$var wire 1 w stage1_num [1] $end
$var wire 1 x stage1_num [0] $end
$var wire 1 y stage2_num [2] $end
$var wire 1 z stage2_num [1] $end
$var wire 1 { stage2_num [0] $end
$var wire 1 | stage3_num [2] $end
$var wire 1 } stage3_num [1] $end
$var wire 1 ~ stage3_num [0] $end
$var wire 1 !! stage01_num [2] $end
$var wire 1 "! stage01_num [1] $end
$var wire 1 #! stage01_num [0] $end
$var wire 1 $! stage12_num [2] $end
$var wire 1 %! stage12_num [1] $end
$var wire 1 &! stage12_num [0] $end
$var wire 1 '! stage23_num [2] $end
$var wire 1 (! stage23_num [1] $end
$var wire 1 )! stage23_num [0] $end
$var wire 1 *! stage30_num [2] $end
$var wire 1 +! stage30_num [1] $end
$var wire 1 ,! stage30_num [0] $end
$var wire 1 -! memory [127] $end
$var wire 1 .! memory [126] $end
$var wire 1 /! memory [125] $end
$var wire 1 0! memory [124] $end
$var wire 1 1! memory [123] $end
$var wire 1 2! memory [122] $end
$var wire 1 3! memory [121] $end
$var wire 1 4! memory [120] $end
$var wire 1 5! memory [119] $end
$var wire 1 6! memory [118] $end
$var wire 1 7! memory [117] $end
$var wire 1 8! memory [116] $end
$var wire 1 9! memory [115] $end
$var wire 1 :! memory [114] $end
$var wire 1 ;! memory [113] $end
$var wire 1 <! memory [112] $end
$var wire 1 =! memory [111] $end
$var wire 1 >! memory [110] $end
$var wire 1 ?! memory [109] $end
$var wire 1 @! memory [108] $end
$var wire 1 A! memory [107] $end
$var wire 1 B! memory [106] $end
$var wire 1 C! memory [105] $end
$var wire 1 D! memory [104] $end
$var wire 1 E! memory [103] $end
$var wire 1 F! memory [102] $end
$var wire 1 G! memory [101] $end
$var wire 1 H! memory [100] $end
$var wire 1 I! memory [99] $end
$var wire 1 J! memory [98] $end
$var wire 1 K! memory [97] $end
$var wire 1 L! memory [96] $end
$var wire 1 M! memory [95] $end
$var wire 1 N! memory [94] $end
$var wire 1 O! memory [93] $end
$var wire 1 P! memory [92] $end
$var wire 1 Q! memory [91] $end
$var wire 1 R! memory [90] $end
$var wire 1 S! memory [89] $end
$var wire 1 T! memory [88] $end
$var wire 1 U! memory [87] $end
$var wire 1 V! memory [86] $end
$var wire 1 W! memory [85] $end
$var wire 1 X! memory [84] $end
$var wire 1 Y! memory [83] $end
$var wire 1 Z! memory [82] $end
$var wire 1 [! memory [81] $end
$var wire 1 \! memory [80] $end
$var wire 1 ]! memory [79] $end
$var wire 1 ^! memory [78] $end
$var wire 1 _! memory [77] $end
$var wire 1 `! memory [76] $end
$var wire 1 a! memory [75] $end
$var wire 1 b! memory [74] $end
$var wire 1 c! memory [73] $end
$var wire 1 d! memory [72] $end
$var wire 1 e! memory [71] $end
$var wire 1 f! memory [70] $end
$var wire 1 g! memory [69] $end
$var wire 1 h! memory [68] $end
$var wire 1 i! memory [67] $end
$var wire 1 j! memory [66] $end
$var wire 1 k! memory [65] $end
$var wire 1 l! memory [64] $end
$var wire 1 m! memory [63] $end
$var wire 1 n! memory [62] $end
$var wire 1 o! memory [61] $end
$var wire 1 p! memory [60] $end
$var wire 1 q! memory [59] $end
$var wire 1 r! memory [58] $end
$var wire 1 s! memory [57] $end
$var wire 1 t! memory [56] $end
$var wire 1 u! memory [55] $end
$var wire 1 v! memory [54] $end
$var wire 1 w! memory [53] $end
$var wire 1 x! memory [52] $end
$var wire 1 y! memory [51] $end
$var wire 1 z! memory [50] $end
$var wire 1 {! memory [49] $end
$var wire 1 |! memory [48] $end
$var wire 1 }! memory [47] $end
$var wire 1 ~! memory [46] $end
$var wire 1 !" memory [45] $end
$var wire 1 "" memory [44] $end
$var wire 1 #" memory [43] $end
$var wire 1 $" memory [42] $end
$var wire 1 %" memory [41] $end
$var wire 1 &" memory [40] $end
$var wire 1 '" memory [39] $end
$var wire 1 (" memory [38] $end
$var wire 1 )" memory [37] $end
$var wire 1 *" memory [36] $end
$var wire 1 +" memory [35] $end
$var wire 1 ," memory [34] $end
$var wire 1 -" memory [33] $end
$var wire 1 ." memory [32] $end
$var wire 1 /" memory [31] $end
$var wire 1 0" memory [30] $end
$var wire 1 1" memory [29] $end
$var wire 1 2" memory [28] $end
$var wire 1 3" memory [27] $end
$var wire 1 4" memory [26] $end
$var wire 1 5" memory [25] $end
$var wire 1 6" memory [24] $end
$var wire 1 7" memory [23] $end
$var wire 1 8" memory [22] $end
$var wire 1 9" memory [21] $end
$var wire 1 :" memory [20] $end
$var wire 1 ;" memory [19] $end
$var wire 1 <" memory [18] $end
$var wire 1 =" memory [17] $end
$var wire 1 >" memory [16] $end
$var wire 1 ?" memory [15] $end
$var wire 1 @" memory [14] $end
$var wire 1 A" memory [13] $end
$var wire 1 B" memory [12] $end
$var wire 1 C" memory [11] $end
$var wire 1 D" memory [10] $end
$var wire 1 E" memory [9] $end
$var wire 1 F" memory [8] $end
$var wire 1 G" memory [7] $end
$var wire 1 H" memory [6] $end
$var wire 1 I" memory [5] $end
$var wire 1 J" memory [4] $end
$var wire 1 K" memory [3] $end
$var wire 1 L" memory [2] $end
$var wire 1 M" memory [1] $end
$var wire 1 N" memory [0] $end
$var wire 1 O" starting_x_power [15] $end
$var wire 1 P" starting_x_power [14] $end
$var wire 1 Q" starting_x_power [13] $end
$var wire 1 R" starting_x_power [12] $end
$var wire 1 S" starting_x_power [11] $end
$var wire 1 T" starting_x_power [10] $end
$var wire 1 U" starting_x_power [9] $end
$var wire 1 V" starting_x_power [8] $end
$var wire 1 W" starting_x_power [7] $end
$var wire 1 X" starting_x_power [6] $end
$var wire 1 Y" starting_x_power [5] $end
$var wire 1 Z" starting_x_power [4] $end
$var wire 1 [" starting_x_power [3] $end
$var wire 1 \" starting_x_power [2] $end
$var wire 1 ]" starting_x_power [1] $end
$var wire 1 ^" starting_x_power [0] $end
$var wire 1 _" shifted_x [15] $end
$var wire 1 `" shifted_x [14] $end
$var wire 1 a" shifted_x [13] $end
$var wire 1 b" shifted_x [12] $end
$var wire 1 c" shifted_x [11] $end
$var wire 1 d" shifted_x [10] $end
$var wire 1 e" shifted_x [9] $end
$var wire 1 f" shifted_x [8] $end
$var wire 1 g" shifted_x [7] $end
$var wire 1 h" shifted_x [6] $end
$var wire 1 i" shifted_x [5] $end
$var wire 1 j" shifted_x [4] $end
$var wire 1 k" shifted_x [3] $end
$var wire 1 l" shifted_x [2] $end
$var wire 1 m" shifted_x [1] $end
$var wire 1 n" shifted_x [0] $end
$var wire 1 o" stage0_x_power [15] $end
$var wire 1 p" stage0_x_power [14] $end
$var wire 1 q" stage0_x_power [13] $end
$var wire 1 r" stage0_x_power [12] $end
$var wire 1 s" stage0_x_power [11] $end
$var wire 1 t" stage0_x_power [10] $end
$var wire 1 u" stage0_x_power [9] $end
$var wire 1 v" stage0_x_power [8] $end
$var wire 1 w" stage0_x_power [7] $end
$var wire 1 x" stage0_x_power [6] $end
$var wire 1 y" stage0_x_power [5] $end
$var wire 1 z" stage0_x_power [4] $end
$var wire 1 {" stage0_x_power [3] $end
$var wire 1 |" stage0_x_power [2] $end
$var wire 1 }" stage0_x_power [1] $end
$var wire 1 ~" stage0_x_power [0] $end
$var wire 1 !# stage1_x_power [15] $end
$var wire 1 "# stage1_x_power [14] $end
$var wire 1 ## stage1_x_power [13] $end
$var wire 1 $# stage1_x_power [12] $end
$var wire 1 %# stage1_x_power [11] $end
$var wire 1 &# stage1_x_power [10] $end
$var wire 1 '# stage1_x_power [9] $end
$var wire 1 (# stage1_x_power [8] $end
$var wire 1 )# stage1_x_power [7] $end
$var wire 1 *# stage1_x_power [6] $end
$var wire 1 +# stage1_x_power [5] $end
$var wire 1 ,# stage1_x_power [4] $end
$var wire 1 -# stage1_x_power [3] $end
$var wire 1 .# stage1_x_power [2] $end
$var wire 1 /# stage1_x_power [1] $end
$var wire 1 0# stage1_x_power [0] $end
$var wire 1 1# stage2_x_power [15] $end
$var wire 1 2# stage2_x_power [14] $end
$var wire 1 3# stage2_x_power [13] $end
$var wire 1 4# stage2_x_power [12] $end
$var wire 1 5# stage2_x_power [11] $end
$var wire 1 6# stage2_x_power [10] $end
$var wire 1 7# stage2_x_power [9] $end
$var wire 1 8# stage2_x_power [8] $end
$var wire 1 9# stage2_x_power [7] $end
$var wire 1 :# stage2_x_power [6] $end
$var wire 1 ;# stage2_x_power [5] $end
$var wire 1 <# stage2_x_power [4] $end
$var wire 1 =# stage2_x_power [3] $end
$var wire 1 ># stage2_x_power [2] $end
$var wire 1 ?# stage2_x_power [1] $end
$var wire 1 @# stage2_x_power [0] $end
$var wire 1 A# stage3_x_power [15] $end
$var wire 1 B# stage3_x_power [14] $end
$var wire 1 C# stage3_x_power [13] $end
$var wire 1 D# stage3_x_power [12] $end
$var wire 1 E# stage3_x_power [11] $end
$var wire 1 F# stage3_x_power [10] $end
$var wire 1 G# stage3_x_power [9] $end
$var wire 1 H# stage3_x_power [8] $end
$var wire 1 I# stage3_x_power [7] $end
$var wire 1 J# stage3_x_power [6] $end
$var wire 1 K# stage3_x_power [5] $end
$var wire 1 L# stage3_x_power [4] $end
$var wire 1 M# stage3_x_power [3] $end
$var wire 1 N# stage3_x_power [2] $end
$var wire 1 O# stage3_x_power [1] $end
$var wire 1 P# stage3_x_power [0] $end
$var wire 1 Q# stage01_x_power [15] $end
$var wire 1 R# stage01_x_power [14] $end
$var wire 1 S# stage01_x_power [13] $end
$var wire 1 T# stage01_x_power [12] $end
$var wire 1 U# stage01_x_power [11] $end
$var wire 1 V# stage01_x_power [10] $end
$var wire 1 W# stage01_x_power [9] $end
$var wire 1 X# stage01_x_power [8] $end
$var wire 1 Y# stage01_x_power [7] $end
$var wire 1 Z# stage01_x_power [6] $end
$var wire 1 [# stage01_x_power [5] $end
$var wire 1 \# stage01_x_power [4] $end
$var wire 1 ]# stage01_x_power [3] $end
$var wire 1 ^# stage01_x_power [2] $end
$var wire 1 _# stage01_x_power [1] $end
$var wire 1 `# stage01_x_power [0] $end
$var wire 1 a# stage12_x_power [15] $end
$var wire 1 b# stage12_x_power [14] $end
$var wire 1 c# stage12_x_power [13] $end
$var wire 1 d# stage12_x_power [12] $end
$var wire 1 e# stage12_x_power [11] $end
$var wire 1 f# stage12_x_power [10] $end
$var wire 1 g# stage12_x_power [9] $end
$var wire 1 h# stage12_x_power [8] $end
$var wire 1 i# stage12_x_power [7] $end
$var wire 1 j# stage12_x_power [6] $end
$var wire 1 k# stage12_x_power [5] $end
$var wire 1 l# stage12_x_power [4] $end
$var wire 1 m# stage12_x_power [3] $end
$var wire 1 n# stage12_x_power [2] $end
$var wire 1 o# stage12_x_power [1] $end
$var wire 1 p# stage12_x_power [0] $end
$var wire 1 q# stage23_x_power [15] $end
$var wire 1 r# stage23_x_power [14] $end
$var wire 1 s# stage23_x_power [13] $end
$var wire 1 t# stage23_x_power [12] $end
$var wire 1 u# stage23_x_power [11] $end
$var wire 1 v# stage23_x_power [10] $end
$var wire 1 w# stage23_x_power [9] $end
$var wire 1 x# stage23_x_power [8] $end
$var wire 1 y# stage23_x_power [7] $end
$var wire 1 z# stage23_x_power [6] $end
$var wire 1 {# stage23_x_power [5] $end
$var wire 1 |# stage23_x_power [4] $end
$var wire 1 }# stage23_x_power [3] $end
$var wire 1 ~# stage23_x_power [2] $end
$var wire 1 !$ stage23_x_power [1] $end
$var wire 1 "$ stage23_x_power [0] $end
$var wire 1 #$ stage30_x_power [15] $end
$var wire 1 $$ stage30_x_power [14] $end
$var wire 1 %$ stage30_x_power [13] $end
$var wire 1 &$ stage30_x_power [12] $end
$var wire 1 '$ stage30_x_power [11] $end
$var wire 1 ($ stage30_x_power [10] $end
$var wire 1 )$ stage30_x_power [9] $end
$var wire 1 *$ stage30_x_power [8] $end
$var wire 1 +$ stage30_x_power [7] $end
$var wire 1 ,$ stage30_x_power [6] $end
$var wire 1 -$ stage30_x_power [5] $end
$var wire 1 .$ stage30_x_power [4] $end
$var wire 1 /$ stage30_x_power [3] $end
$var wire 1 0$ stage30_x_power [2] $end
$var wire 1 1$ stage30_x_power [1] $end
$var wire 1 2$ stage30_x_power [0] $end
$var wire 1 3$ starting_result [31] $end
$var wire 1 4$ starting_result [30] $end
$var wire 1 5$ starting_result [29] $end
$var wire 1 6$ starting_result [28] $end
$var wire 1 7$ starting_result [27] $end
$var wire 1 8$ starting_result [26] $end
$var wire 1 9$ starting_result [25] $end
$var wire 1 :$ starting_result [24] $end
$var wire 1 ;$ starting_result [23] $end
$var wire 1 <$ starting_result [22] $end
$var wire 1 =$ starting_result [21] $end
$var wire 1 >$ starting_result [20] $end
$var wire 1 ?$ starting_result [19] $end
$var wire 1 @$ starting_result [18] $end
$var wire 1 A$ starting_result [17] $end
$var wire 1 B$ starting_result [16] $end
$var wire 1 C$ starting_result [15] $end
$var wire 1 D$ starting_result [14] $end
$var wire 1 E$ starting_result [13] $end
$var wire 1 F$ starting_result [12] $end
$var wire 1 G$ starting_result [11] $end
$var wire 1 H$ starting_result [10] $end
$var wire 1 I$ starting_result [9] $end
$var wire 1 J$ starting_result [8] $end
$var wire 1 K$ starting_result [7] $end
$var wire 1 L$ starting_result [6] $end
$var wire 1 M$ starting_result [5] $end
$var wire 1 N$ starting_result [4] $end
$var wire 1 O$ starting_result [3] $end
$var wire 1 P$ starting_result [2] $end
$var wire 1 Q$ starting_result [1] $end
$var wire 1 R$ starting_result [0] $end
$var wire 1 S$ stage0_result [31] $end
$var wire 1 T$ stage0_result [30] $end
$var wire 1 U$ stage0_result [29] $end
$var wire 1 V$ stage0_result [28] $end
$var wire 1 W$ stage0_result [27] $end
$var wire 1 X$ stage0_result [26] $end
$var wire 1 Y$ stage0_result [25] $end
$var wire 1 Z$ stage0_result [24] $end
$var wire 1 [$ stage0_result [23] $end
$var wire 1 \$ stage0_result [22] $end
$var wire 1 ]$ stage0_result [21] $end
$var wire 1 ^$ stage0_result [20] $end
$var wire 1 _$ stage0_result [19] $end
$var wire 1 `$ stage0_result [18] $end
$var wire 1 a$ stage0_result [17] $end
$var wire 1 b$ stage0_result [16] $end
$var wire 1 c$ stage0_result [15] $end
$var wire 1 d$ stage0_result [14] $end
$var wire 1 e$ stage0_result [13] $end
$var wire 1 f$ stage0_result [12] $end
$var wire 1 g$ stage0_result [11] $end
$var wire 1 h$ stage0_result [10] $end
$var wire 1 i$ stage0_result [9] $end
$var wire 1 j$ stage0_result [8] $end
$var wire 1 k$ stage0_result [7] $end
$var wire 1 l$ stage0_result [6] $end
$var wire 1 m$ stage0_result [5] $end
$var wire 1 n$ stage0_result [4] $end
$var wire 1 o$ stage0_result [3] $end
$var wire 1 p$ stage0_result [2] $end
$var wire 1 q$ stage0_result [1] $end
$var wire 1 r$ stage0_result [0] $end
$var wire 1 s$ stage01_result [31] $end
$var wire 1 t$ stage01_result [30] $end
$var wire 1 u$ stage01_result [29] $end
$var wire 1 v$ stage01_result [28] $end
$var wire 1 w$ stage01_result [27] $end
$var wire 1 x$ stage01_result [26] $end
$var wire 1 y$ stage01_result [25] $end
$var wire 1 z$ stage01_result [24] $end
$var wire 1 {$ stage01_result [23] $end
$var wire 1 |$ stage01_result [22] $end
$var wire 1 }$ stage01_result [21] $end
$var wire 1 ~$ stage01_result [20] $end
$var wire 1 !% stage01_result [19] $end
$var wire 1 "% stage01_result [18] $end
$var wire 1 #% stage01_result [17] $end
$var wire 1 $% stage01_result [16] $end
$var wire 1 %% stage01_result [15] $end
$var wire 1 &% stage01_result [14] $end
$var wire 1 '% stage01_result [13] $end
$var wire 1 (% stage01_result [12] $end
$var wire 1 )% stage01_result [11] $end
$var wire 1 *% stage01_result [10] $end
$var wire 1 +% stage01_result [9] $end
$var wire 1 ,% stage01_result [8] $end
$var wire 1 -% stage01_result [7] $end
$var wire 1 .% stage01_result [6] $end
$var wire 1 /% stage01_result [5] $end
$var wire 1 0% stage01_result [4] $end
$var wire 1 1% stage01_result [3] $end
$var wire 1 2% stage01_result [2] $end
$var wire 1 3% stage01_result [1] $end
$var wire 1 4% stage01_result [0] $end
$var wire 1 5% stage1_result [31] $end
$var wire 1 6% stage1_result [30] $end
$var wire 1 7% stage1_result [29] $end
$var wire 1 8% stage1_result [28] $end
$var wire 1 9% stage1_result [27] $end
$var wire 1 :% stage1_result [26] $end
$var wire 1 ;% stage1_result [25] $end
$var wire 1 <% stage1_result [24] $end
$var wire 1 =% stage1_result [23] $end
$var wire 1 >% stage1_result [22] $end
$var wire 1 ?% stage1_result [21] $end
$var wire 1 @% stage1_result [20] $end
$var wire 1 A% stage1_result [19] $end
$var wire 1 B% stage1_result [18] $end
$var wire 1 C% stage1_result [17] $end
$var wire 1 D% stage1_result [16] $end
$var wire 1 E% stage1_result [15] $end
$var wire 1 F% stage1_result [14] $end
$var wire 1 G% stage1_result [13] $end
$var wire 1 H% stage1_result [12] $end
$var wire 1 I% stage1_result [11] $end
$var wire 1 J% stage1_result [10] $end
$var wire 1 K% stage1_result [9] $end
$var wire 1 L% stage1_result [8] $end
$var wire 1 M% stage1_result [7] $end
$var wire 1 N% stage1_result [6] $end
$var wire 1 O% stage1_result [5] $end
$var wire 1 P% stage1_result [4] $end
$var wire 1 Q% stage1_result [3] $end
$var wire 1 R% stage1_result [2] $end
$var wire 1 S% stage1_result [1] $end
$var wire 1 T% stage1_result [0] $end
$var wire 1 U% stage12_result [31] $end
$var wire 1 V% stage12_result [30] $end
$var wire 1 W% stage12_result [29] $end
$var wire 1 X% stage12_result [28] $end
$var wire 1 Y% stage12_result [27] $end
$var wire 1 Z% stage12_result [26] $end
$var wire 1 [% stage12_result [25] $end
$var wire 1 \% stage12_result [24] $end
$var wire 1 ]% stage12_result [23] $end
$var wire 1 ^% stage12_result [22] $end
$var wire 1 _% stage12_result [21] $end
$var wire 1 `% stage12_result [20] $end
$var wire 1 a% stage12_result [19] $end
$var wire 1 b% stage12_result [18] $end
$var wire 1 c% stage12_result [17] $end
$var wire 1 d% stage12_result [16] $end
$var wire 1 e% stage12_result [15] $end
$var wire 1 f% stage12_result [14] $end
$var wire 1 g% stage12_result [13] $end
$var wire 1 h% stage12_result [12] $end
$var wire 1 i% stage12_result [11] $end
$var wire 1 j% stage12_result [10] $end
$var wire 1 k% stage12_result [9] $end
$var wire 1 l% stage12_result [8] $end
$var wire 1 m% stage12_result [7] $end
$var wire 1 n% stage12_result [6] $end
$var wire 1 o% stage12_result [5] $end
$var wire 1 p% stage12_result [4] $end
$var wire 1 q% stage12_result [3] $end
$var wire 1 r% stage12_result [2] $end
$var wire 1 s% stage12_result [1] $end
$var wire 1 t% stage12_result [0] $end
$var wire 1 u% stage2_result [31] $end
$var wire 1 v% stage2_result [30] $end
$var wire 1 w% stage2_result [29] $end
$var wire 1 x% stage2_result [28] $end
$var wire 1 y% stage2_result [27] $end
$var wire 1 z% stage2_result [26] $end
$var wire 1 {% stage2_result [25] $end
$var wire 1 |% stage2_result [24] $end
$var wire 1 }% stage2_result [23] $end
$var wire 1 ~% stage2_result [22] $end
$var wire 1 !& stage2_result [21] $end
$var wire 1 "& stage2_result [20] $end
$var wire 1 #& stage2_result [19] $end
$var wire 1 $& stage2_result [18] $end
$var wire 1 %& stage2_result [17] $end
$var wire 1 && stage2_result [16] $end
$var wire 1 '& stage2_result [15] $end
$var wire 1 (& stage2_result [14] $end
$var wire 1 )& stage2_result [13] $end
$var wire 1 *& stage2_result [12] $end
$var wire 1 +& stage2_result [11] $end
$var wire 1 ,& stage2_result [10] $end
$var wire 1 -& stage2_result [9] $end
$var wire 1 .& stage2_result [8] $end
$var wire 1 /& stage2_result [7] $end
$var wire 1 0& stage2_result [6] $end
$var wire 1 1& stage2_result [5] $end
$var wire 1 2& stage2_result [4] $end
$var wire 1 3& stage2_result [3] $end
$var wire 1 4& stage2_result [2] $end
$var wire 1 5& stage2_result [1] $end
$var wire 1 6& stage2_result [0] $end
$var wire 1 7& stage23_result [31] $end
$var wire 1 8& stage23_result [30] $end
$var wire 1 9& stage23_result [29] $end
$var wire 1 :& stage23_result [28] $end
$var wire 1 ;& stage23_result [27] $end
$var wire 1 <& stage23_result [26] $end
$var wire 1 =& stage23_result [25] $end
$var wire 1 >& stage23_result [24] $end
$var wire 1 ?& stage23_result [23] $end
$var wire 1 @& stage23_result [22] $end
$var wire 1 A& stage23_result [21] $end
$var wire 1 B& stage23_result [20] $end
$var wire 1 C& stage23_result [19] $end
$var wire 1 D& stage23_result [18] $end
$var wire 1 E& stage23_result [17] $end
$var wire 1 F& stage23_result [16] $end
$var wire 1 G& stage23_result [15] $end
$var wire 1 H& stage23_result [14] $end
$var wire 1 I& stage23_result [13] $end
$var wire 1 J& stage23_result [12] $end
$var wire 1 K& stage23_result [11] $end
$var wire 1 L& stage23_result [10] $end
$var wire 1 M& stage23_result [9] $end
$var wire 1 N& stage23_result [8] $end
$var wire 1 O& stage23_result [7] $end
$var wire 1 P& stage23_result [6] $end
$var wire 1 Q& stage23_result [5] $end
$var wire 1 R& stage23_result [4] $end
$var wire 1 S& stage23_result [3] $end
$var wire 1 T& stage23_result [2] $end
$var wire 1 U& stage23_result [1] $end
$var wire 1 V& stage23_result [0] $end
$var wire 1 W& stage3_result [31] $end
$var wire 1 X& stage3_result [30] $end
$var wire 1 Y& stage3_result [29] $end
$var wire 1 Z& stage3_result [28] $end
$var wire 1 [& stage3_result [27] $end
$var wire 1 \& stage3_result [26] $end
$var wire 1 ]& stage3_result [25] $end
$var wire 1 ^& stage3_result [24] $end
$var wire 1 _& stage3_result [23] $end
$var wire 1 `& stage3_result [22] $end
$var wire 1 a& stage3_result [21] $end
$var wire 1 b& stage3_result [20] $end
$var wire 1 c& stage3_result [19] $end
$var wire 1 d& stage3_result [18] $end
$var wire 1 e& stage3_result [17] $end
$var wire 1 f& stage3_result [16] $end
$var wire 1 g& stage3_result [15] $end
$var wire 1 h& stage3_result [14] $end
$var wire 1 i& stage3_result [13] $end
$var wire 1 j& stage3_result [12] $end
$var wire 1 k& stage3_result [11] $end
$var wire 1 l& stage3_result [10] $end
$var wire 1 m& stage3_result [9] $end
$var wire 1 n& stage3_result [8] $end
$var wire 1 o& stage3_result [7] $end
$var wire 1 p& stage3_result [6] $end
$var wire 1 q& stage3_result [5] $end
$var wire 1 r& stage3_result [4] $end
$var wire 1 s& stage3_result [3] $end
$var wire 1 t& stage3_result [2] $end
$var wire 1 u& stage3_result [1] $end
$var wire 1 v& stage3_result [0] $end
$var wire 1 w& stage30_result [31] $end
$var wire 1 x& stage30_result [30] $end
$var wire 1 y& stage30_result [29] $end
$var wire 1 z& stage30_result [28] $end
$var wire 1 {& stage30_result [27] $end
$var wire 1 |& stage30_result [26] $end
$var wire 1 }& stage30_result [25] $end
$var wire 1 ~& stage30_result [24] $end
$var wire 1 !' stage30_result [23] $end
$var wire 1 "' stage30_result [22] $end
$var wire 1 #' stage30_result [21] $end
$var wire 1 $' stage30_result [20] $end
$var wire 1 %' stage30_result [19] $end
$var wire 1 &' stage30_result [18] $end
$var wire 1 '' stage30_result [17] $end
$var wire 1 (' stage30_result [16] $end
$var wire 1 )' stage30_result [15] $end
$var wire 1 *' stage30_result [14] $end
$var wire 1 +' stage30_result [13] $end
$var wire 1 ,' stage30_result [12] $end
$var wire 1 -' stage30_result [11] $end
$var wire 1 .' stage30_result [10] $end
$var wire 1 /' stage30_result [9] $end
$var wire 1 0' stage30_result [8] $end
$var wire 1 1' stage30_result [7] $end
$var wire 1 2' stage30_result [6] $end
$var wire 1 3' stage30_result [5] $end
$var wire 1 4' stage30_result [4] $end
$var wire 1 5' stage30_result [3] $end
$var wire 1 6' stage30_result [2] $end
$var wire 1 7' stage30_result [1] $end
$var wire 1 8' stage30_result [0] $end
$var wire 1 9' stage0_overflow $end
$var wire 1 :' stage1_overflow $end
$var wire 1 ;' stage2_overflow $end
$var wire 1 <' stage3_overflow $end
$var wire 1 =' plus $end
$var wire 1 >' minus $end
$var wire 1 ?' result_mux1 [31] $end
$var wire 1 @' result_mux1 [30] $end
$var wire 1 A' result_mux1 [29] $end
$var wire 1 B' result_mux1 [28] $end
$var wire 1 C' result_mux1 [27] $end
$var wire 1 D' result_mux1 [26] $end
$var wire 1 E' result_mux1 [25] $end
$var wire 1 F' result_mux1 [24] $end
$var wire 1 G' result_mux1 [23] $end
$var wire 1 H' result_mux1 [22] $end
$var wire 1 I' result_mux1 [21] $end
$var wire 1 J' result_mux1 [20] $end
$var wire 1 K' result_mux1 [19] $end
$var wire 1 L' result_mux1 [18] $end
$var wire 1 M' result_mux1 [17] $end
$var wire 1 N' result_mux1 [16] $end
$var wire 1 O' result_mux1 [15] $end
$var wire 1 P' result_mux1 [14] $end
$var wire 1 Q' result_mux1 [13] $end
$var wire 1 R' result_mux1 [12] $end
$var wire 1 S' result_mux1 [11] $end
$var wire 1 T' result_mux1 [10] $end
$var wire 1 U' result_mux1 [9] $end
$var wire 1 V' result_mux1 [8] $end
$var wire 1 W' result_mux1 [7] $end
$var wire 1 X' result_mux1 [6] $end
$var wire 1 Y' result_mux1 [5] $end
$var wire 1 Z' result_mux1 [4] $end
$var wire 1 [' result_mux1 [3] $end
$var wire 1 \' result_mux1 [2] $end
$var wire 1 ]' result_mux1 [1] $end
$var wire 1 ^' result_mux1 [0] $end
$var wire 1 _' result_mux2 [31] $end
$var wire 1 `' result_mux2 [30] $end
$var wire 1 a' result_mux2 [29] $end
$var wire 1 b' result_mux2 [28] $end
$var wire 1 c' result_mux2 [27] $end
$var wire 1 d' result_mux2 [26] $end
$var wire 1 e' result_mux2 [25] $end
$var wire 1 f' result_mux2 [24] $end
$var wire 1 g' result_mux2 [23] $end
$var wire 1 h' result_mux2 [22] $end
$var wire 1 i' result_mux2 [21] $end
$var wire 1 j' result_mux2 [20] $end
$var wire 1 k' result_mux2 [19] $end
$var wire 1 l' result_mux2 [18] $end
$var wire 1 m' result_mux2 [17] $end
$var wire 1 n' result_mux2 [16] $end
$var wire 1 o' result_mux2 [15] $end
$var wire 1 p' result_mux2 [14] $end
$var wire 1 q' result_mux2 [13] $end
$var wire 1 r' result_mux2 [12] $end
$var wire 1 s' result_mux2 [11] $end
$var wire 1 t' result_mux2 [10] $end
$var wire 1 u' result_mux2 [9] $end
$var wire 1 v' result_mux2 [8] $end
$var wire 1 w' result_mux2 [7] $end
$var wire 1 x' result_mux2 [6] $end
$var wire 1 y' result_mux2 [5] $end
$var wire 1 z' result_mux2 [4] $end
$var wire 1 {' result_mux2 [3] $end
$var wire 1 |' result_mux2 [2] $end
$var wire 1 }' result_mux2 [1] $end
$var wire 1 ~' result_mux2 [0] $end

$scope module error_check $end
$var wire 1 L clk $end
$var wire 1 M reset $end
$var wire 1 N start $end
$var wire 1 O X_input [7] $end
$var wire 1 P X_input [6] $end
$var wire 1 Q X_input [5] $end
$var wire 1 R X_input [4] $end
$var wire 1 S X_input [3] $end
$var wire 1 T X_input [2] $end
$var wire 1 U X_input [1] $end
$var wire 1 V X_input [0] $end
$var wire 1 W N_input [2] $end
$var wire 1 X N_input [1] $end
$var wire 1 Y N_input [0] $end
$var wire 1 I error $end
$upscope $end

$scope module coeff_rom $end
$var reg 128 !( memory [127:0] $end
$upscope $end

$scope module reg_X $end
$var parameter 32 "( N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 [ ld $end
$var wire 1 O in [7] $end
$var wire 1 P in [6] $end
$var wire 1 Q in [5] $end
$var wire 1 R in [4] $end
$var wire 1 S in [3] $end
$var wire 1 T in [2] $end
$var wire 1 U in [1] $end
$var wire 1 V in [0] $end
$var reg 8 #( out [7:0] $end
$upscope $end

$scope module reg_N $end
$var parameter 32 $( N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 Z ld $end
$var wire 1 W in [2] $end
$var wire 1 X in [1] $end
$var wire 1 Y in [0] $end
$var reg 3 %( out [2:0] $end
$upscope $end

$scope module stage0 $end
$var wire 1 L clk $end
$var wire 1 m N_input [2] $end
$var wire 1 n N_input [1] $end
$var wire 1 o N_input [0] $end
$var wire 1 _" X_input [15] $end
$var wire 1 `" X_input [14] $end
$var wire 1 a" X_input [13] $end
$var wire 1 b" X_input [12] $end
$var wire 1 c" X_input [11] $end
$var wire 1 d" X_input [10] $end
$var wire 1 e" X_input [9] $end
$var wire 1 f" X_input [8] $end
$var wire 1 g" X_input [7] $end
$var wire 1 h" X_input [6] $end
$var wire 1 i" X_input [5] $end
$var wire 1 j" X_input [4] $end
$var wire 1 k" X_input [3] $end
$var wire 1 l" X_input [2] $end
$var wire 1 m" X_input [1] $end
$var wire 1 n" X_input [0] $end
$var wire 1 -! memory [127] $end
$var wire 1 .! memory [126] $end
$var wire 1 /! memory [125] $end
$var wire 1 0! memory [124] $end
$var wire 1 1! memory [123] $end
$var wire 1 2! memory [122] $end
$var wire 1 3! memory [121] $end
$var wire 1 4! memory [120] $end
$var wire 1 5! memory [119] $end
$var wire 1 6! memory [118] $end
$var wire 1 7! memory [117] $end
$var wire 1 8! memory [116] $end
$var wire 1 9! memory [115] $end
$var wire 1 :! memory [114] $end
$var wire 1 ;! memory [113] $end
$var wire 1 <! memory [112] $end
$var wire 1 =! memory [111] $end
$var wire 1 >! memory [110] $end
$var wire 1 ?! memory [109] $end
$var wire 1 @! memory [108] $end
$var wire 1 A! memory [107] $end
$var wire 1 B! memory [106] $end
$var wire 1 C! memory [105] $end
$var wire 1 D! memory [104] $end
$var wire 1 E! memory [103] $end
$var wire 1 F! memory [102] $end
$var wire 1 G! memory [101] $end
$var wire 1 H! memory [100] $end
$var wire 1 I! memory [99] $end
$var wire 1 J! memory [98] $end
$var wire 1 K! memory [97] $end
$var wire 1 L! memory [96] $end
$var wire 1 M! memory [95] $end
$var wire 1 N! memory [94] $end
$var wire 1 O! memory [93] $end
$var wire 1 P! memory [92] $end
$var wire 1 Q! memory [91] $end
$var wire 1 R! memory [90] $end
$var wire 1 S! memory [89] $end
$var wire 1 T! memory [88] $end
$var wire 1 U! memory [87] $end
$var wire 1 V! memory [86] $end
$var wire 1 W! memory [85] $end
$var wire 1 X! memory [84] $end
$var wire 1 Y! memory [83] $end
$var wire 1 Z! memory [82] $end
$var wire 1 [! memory [81] $end
$var wire 1 \! memory [80] $end
$var wire 1 ]! memory [79] $end
$var wire 1 ^! memory [78] $end
$var wire 1 _! memory [77] $end
$var wire 1 `! memory [76] $end
$var wire 1 a! memory [75] $end
$var wire 1 b! memory [74] $end
$var wire 1 c! memory [73] $end
$var wire 1 d! memory [72] $end
$var wire 1 e! memory [71] $end
$var wire 1 f! memory [70] $end
$var wire 1 g! memory [69] $end
$var wire 1 h! memory [68] $end
$var wire 1 i! memory [67] $end
$var wire 1 j! memory [66] $end
$var wire 1 k! memory [65] $end
$var wire 1 l! memory [64] $end
$var wire 1 m! memory [63] $end
$var wire 1 n! memory [62] $end
$var wire 1 o! memory [61] $end
$var wire 1 p! memory [60] $end
$var wire 1 q! memory [59] $end
$var wire 1 r! memory [58] $end
$var wire 1 s! memory [57] $end
$var wire 1 t! memory [56] $end
$var wire 1 u! memory [55] $end
$var wire 1 v! memory [54] $end
$var wire 1 w! memory [53] $end
$var wire 1 x! memory [52] $end
$var wire 1 y! memory [51] $end
$var wire 1 z! memory [50] $end
$var wire 1 {! memory [49] $end
$var wire 1 |! memory [48] $end
$var wire 1 }! memory [47] $end
$var wire 1 ~! memory [46] $end
$var wire 1 !" memory [45] $end
$var wire 1 "" memory [44] $end
$var wire 1 #" memory [43] $end
$var wire 1 $" memory [42] $end
$var wire 1 %" memory [41] $end
$var wire 1 &" memory [40] $end
$var wire 1 '" memory [39] $end
$var wire 1 (" memory [38] $end
$var wire 1 )" memory [37] $end
$var wire 1 *" memory [36] $end
$var wire 1 +" memory [35] $end
$var wire 1 ," memory [34] $end
$var wire 1 -" memory [33] $end
$var wire 1 ." memory [32] $end
$var wire 1 /" memory [31] $end
$var wire 1 0" memory [30] $end
$var wire 1 1" memory [29] $end
$var wire 1 2" memory [28] $end
$var wire 1 3" memory [27] $end
$var wire 1 4" memory [26] $end
$var wire 1 5" memory [25] $end
$var wire 1 6" memory [24] $end
$var wire 1 7" memory [23] $end
$var wire 1 8" memory [22] $end
$var wire 1 9" memory [21] $end
$var wire 1 :" memory [20] $end
$var wire 1 ;" memory [19] $end
$var wire 1 <" memory [18] $end
$var wire 1 =" memory [17] $end
$var wire 1 >" memory [16] $end
$var wire 1 ?" memory [15] $end
$var wire 1 @" memory [14] $end
$var wire 1 A" memory [13] $end
$var wire 1 B" memory [12] $end
$var wire 1 C" memory [11] $end
$var wire 1 D" memory [10] $end
$var wire 1 E" memory [9] $end
$var wire 1 F" memory [8] $end
$var wire 1 G" memory [7] $end
$var wire 1 H" memory [6] $end
$var wire 1 I" memory [5] $end
$var wire 1 J" memory [4] $end
$var wire 1 K" memory [3] $end
$var wire 1 L" memory [2] $end
$var wire 1 M" memory [1] $end
$var wire 1 N" memory [0] $end
$var wire 1 =' stage_sign $end
$var wire 1 3$ prev_stage_result [31] $end
$var wire 1 4$ prev_stage_result [30] $end
$var wire 1 5$ prev_stage_result [29] $end
$var wire 1 6$ prev_stage_result [28] $end
$var wire 1 7$ prev_stage_result [27] $end
$var wire 1 8$ prev_stage_result [26] $end
$var wire 1 9$ prev_stage_result [25] $end
$var wire 1 :$ prev_stage_result [24] $end
$var wire 1 ;$ prev_stage_result [23] $end
$var wire 1 <$ prev_stage_result [22] $end
$var wire 1 =$ prev_stage_result [21] $end
$var wire 1 >$ prev_stage_result [20] $end
$var wire 1 ?$ prev_stage_result [19] $end
$var wire 1 @$ prev_stage_result [18] $end
$var wire 1 A$ prev_stage_result [17] $end
$var wire 1 B$ prev_stage_result [16] $end
$var wire 1 C$ prev_stage_result [15] $end
$var wire 1 D$ prev_stage_result [14] $end
$var wire 1 E$ prev_stage_result [13] $end
$var wire 1 F$ prev_stage_result [12] $end
$var wire 1 G$ prev_stage_result [11] $end
$var wire 1 H$ prev_stage_result [10] $end
$var wire 1 I$ prev_stage_result [9] $end
$var wire 1 J$ prev_stage_result [8] $end
$var wire 1 K$ prev_stage_result [7] $end
$var wire 1 L$ prev_stage_result [6] $end
$var wire 1 M$ prev_stage_result [5] $end
$var wire 1 N$ prev_stage_result [4] $end
$var wire 1 O$ prev_stage_result [3] $end
$var wire 1 P$ prev_stage_result [2] $end
$var wire 1 Q$ prev_stage_result [1] $end
$var wire 1 R$ prev_stage_result [0] $end
$var wire 1 O" current_x_power [15] $end
$var wire 1 P" current_x_power [14] $end
$var wire 1 Q" current_x_power [13] $end
$var wire 1 R" current_x_power [12] $end
$var wire 1 S" current_x_power [11] $end
$var wire 1 T" current_x_power [10] $end
$var wire 1 U" current_x_power [9] $end
$var wire 1 V" current_x_power [8] $end
$var wire 1 W" current_x_power [7] $end
$var wire 1 X" current_x_power [6] $end
$var wire 1 Y" current_x_power [5] $end
$var wire 1 Z" current_x_power [4] $end
$var wire 1 [" current_x_power [3] $end
$var wire 1 \" current_x_power [2] $end
$var wire 1 ]" current_x_power [1] $end
$var wire 1 ^" current_x_power [0] $end
$var wire 1 p current_stage_num [2] $end
$var wire 1 q current_stage_num [1] $end
$var wire 1 r current_stage_num [0] $end
$var wire 1 S$ current_stage_result [31] $end
$var wire 1 T$ current_stage_result [30] $end
$var wire 1 U$ current_stage_result [29] $end
$var wire 1 V$ current_stage_result [28] $end
$var wire 1 W$ current_stage_result [27] $end
$var wire 1 X$ current_stage_result [26] $end
$var wire 1 Y$ current_stage_result [25] $end
$var wire 1 Z$ current_stage_result [24] $end
$var wire 1 [$ current_stage_result [23] $end
$var wire 1 \$ current_stage_result [22] $end
$var wire 1 ]$ current_stage_result [21] $end
$var wire 1 ^$ current_stage_result [20] $end
$var wire 1 _$ current_stage_result [19] $end
$var wire 1 `$ current_stage_result [18] $end
$var wire 1 a$ current_stage_result [17] $end
$var wire 1 b$ current_stage_result [16] $end
$var wire 1 c$ current_stage_result [15] $end
$var wire 1 d$ current_stage_result [14] $end
$var wire 1 e$ current_stage_result [13] $end
$var wire 1 f$ current_stage_result [12] $end
$var wire 1 g$ current_stage_result [11] $end
$var wire 1 h$ current_stage_result [10] $end
$var wire 1 i$ current_stage_result [9] $end
$var wire 1 j$ current_stage_result [8] $end
$var wire 1 k$ current_stage_result [7] $end
$var wire 1 l$ current_stage_result [6] $end
$var wire 1 m$ current_stage_result [5] $end
$var wire 1 n$ current_stage_result [4] $end
$var wire 1 o$ current_stage_result [3] $end
$var wire 1 p$ current_stage_result [2] $end
$var wire 1 q$ current_stage_result [1] $end
$var wire 1 r$ current_stage_result [0] $end
$var wire 1 o" next_x_power [15] $end
$var wire 1 p" next_x_power [14] $end
$var wire 1 q" next_x_power [13] $end
$var wire 1 r" next_x_power [12] $end
$var wire 1 s" next_x_power [11] $end
$var wire 1 t" next_x_power [10] $end
$var wire 1 u" next_x_power [9] $end
$var wire 1 v" next_x_power [8] $end
$var wire 1 w" next_x_power [7] $end
$var wire 1 x" next_x_power [6] $end
$var wire 1 y" next_x_power [5] $end
$var wire 1 z" next_x_power [4] $end
$var wire 1 {" next_x_power [3] $end
$var wire 1 |" next_x_power [2] $end
$var wire 1 }" next_x_power [1] $end
$var wire 1 ~" next_x_power [0] $end
$var wire 1 s next_stage_num [2] $end
$var wire 1 t next_stage_num [1] $end
$var wire 1 u next_stage_num [0] $end
$var wire 1 9' overflow $end
$var wire 1 &( mult_result [15] $end
$var wire 1 '( mult_result [14] $end
$var wire 1 (( mult_result [13] $end
$var wire 1 )( mult_result [12] $end
$var wire 1 *( mult_result [11] $end
$var wire 1 +( mult_result [10] $end
$var wire 1 ,( mult_result [9] $end
$var wire 1 -( mult_result [8] $end
$var wire 1 .( mult_result [7] $end
$var wire 1 /( mult_result [6] $end
$var wire 1 0( mult_result [5] $end
$var wire 1 1( mult_result [4] $end
$var wire 1 2( mult_result [3] $end
$var wire 1 3( mult_result [2] $end
$var wire 1 4( mult_result [1] $end
$var wire 1 5( mult_result [0] $end
$var wire 1 6( mult_result_sign_extended [31] $end
$var wire 1 7( mult_result_sign_extended [30] $end
$var wire 1 8( mult_result_sign_extended [29] $end
$var wire 1 9( mult_result_sign_extended [28] $end
$var wire 1 :( mult_result_sign_extended [27] $end
$var wire 1 ;( mult_result_sign_extended [26] $end
$var wire 1 <( mult_result_sign_extended [25] $end
$var wire 1 =( mult_result_sign_extended [24] $end
$var wire 1 >( mult_result_sign_extended [23] $end
$var wire 1 ?( mult_result_sign_extended [22] $end
$var wire 1 @( mult_result_sign_extended [21] $end
$var wire 1 A( mult_result_sign_extended [20] $end
$var wire 1 B( mult_result_sign_extended [19] $end
$var wire 1 C( mult_result_sign_extended [18] $end
$var wire 1 D( mult_result_sign_extended [17] $end
$var wire 1 E( mult_result_sign_extended [16] $end
$var wire 1 F( mult_result_sign_extended [15] $end
$var wire 1 G( mult_result_sign_extended [14] $end
$var wire 1 H( mult_result_sign_extended [13] $end
$var wire 1 I( mult_result_sign_extended [12] $end
$var wire 1 J( mult_result_sign_extended [11] $end
$var wire 1 K( mult_result_sign_extended [10] $end
$var wire 1 L( mult_result_sign_extended [9] $end
$var wire 1 M( mult_result_sign_extended [8] $end
$var wire 1 N( mult_result_sign_extended [7] $end
$var wire 1 O( mult_result_sign_extended [6] $end
$var wire 1 P( mult_result_sign_extended [5] $end
$var wire 1 Q( mult_result_sign_extended [4] $end
$var wire 1 R( mult_result_sign_extended [3] $end
$var wire 1 S( mult_result_sign_extended [2] $end
$var wire 1 T( mult_result_sign_extended [1] $end
$var wire 1 U( mult_result_sign_extended [0] $end

$scope module mult $end
$var wire 1 O" inA [15] $end
$var wire 1 P" inA [14] $end
$var wire 1 Q" inA [13] $end
$var wire 1 R" inA [12] $end
$var wire 1 S" inA [11] $end
$var wire 1 T" inA [10] $end
$var wire 1 U" inA [9] $end
$var wire 1 V" inA [8] $end
$var wire 1 W" inA [7] $end
$var wire 1 X" inA [6] $end
$var wire 1 Y" inA [5] $end
$var wire 1 Z" inA [4] $end
$var wire 1 [" inA [3] $end
$var wire 1 \" inA [2] $end
$var wire 1 ]" inA [1] $end
$var wire 1 ^" inA [0] $end
$var wire 1 _" inB [15] $end
$var wire 1 `" inB [14] $end
$var wire 1 a" inB [13] $end
$var wire 1 b" inB [12] $end
$var wire 1 c" inB [11] $end
$var wire 1 d" inB [10] $end
$var wire 1 e" inB [9] $end
$var wire 1 f" inB [8] $end
$var wire 1 g" inB [7] $end
$var wire 1 h" inB [6] $end
$var wire 1 i" inB [5] $end
$var wire 1 j" inB [4] $end
$var wire 1 k" inB [3] $end
$var wire 1 l" inB [2] $end
$var wire 1 m" inB [1] $end
$var wire 1 n" inB [0] $end
$var wire 1 o" out [15] $end
$var wire 1 p" out [14] $end
$var wire 1 q" out [13] $end
$var wire 1 r" out [12] $end
$var wire 1 s" out [11] $end
$var wire 1 t" out [10] $end
$var wire 1 u" out [9] $end
$var wire 1 v" out [8] $end
$var wire 1 w" out [7] $end
$var wire 1 x" out [6] $end
$var wire 1 y" out [5] $end
$var wire 1 z" out [4] $end
$var wire 1 {" out [3] $end
$var wire 1 |" out [2] $end
$var wire 1 }" out [1] $end
$var wire 1 ~" out [0] $end
$var wire 1 V( mult_result [31] $end
$var wire 1 W( mult_result [30] $end
$var wire 1 X( mult_result [29] $end
$var wire 1 Y( mult_result [28] $end
$var wire 1 Z( mult_result [27] $end
$var wire 1 [( mult_result [26] $end
$var wire 1 \( mult_result [25] $end
$var wire 1 ]( mult_result [24] $end
$var wire 1 ^( mult_result [23] $end
$var wire 1 _( mult_result [22] $end
$var wire 1 `( mult_result [21] $end
$var wire 1 a( mult_result [20] $end
$var wire 1 b( mult_result [19] $end
$var wire 1 c( mult_result [18] $end
$var wire 1 d( mult_result [17] $end
$var wire 1 e( mult_result [16] $end
$var wire 1 f( mult_result [15] $end
$var wire 1 g( mult_result [14] $end
$var wire 1 h( mult_result [13] $end
$var wire 1 i( mult_result [12] $end
$var wire 1 j( mult_result [11] $end
$var wire 1 k( mult_result [10] $end
$var wire 1 l( mult_result [9] $end
$var wire 1 m( mult_result [8] $end
$var wire 1 n( mult_result [7] $end
$var wire 1 o( mult_result [6] $end
$var wire 1 p( mult_result [5] $end
$var wire 1 q( mult_result [4] $end
$var wire 1 r( mult_result [3] $end
$var wire 1 s( mult_result [2] $end
$var wire 1 t( mult_result [1] $end
$var wire 1 u( mult_result [0] $end
$upscope $end

$scope module mult2 $end
$var wire 1 v( inA [15] $end
$var wire 1 w( inA [14] $end
$var wire 1 x( inA [13] $end
$var wire 1 y( inA [12] $end
$var wire 1 z( inA [11] $end
$var wire 1 {( inA [10] $end
$var wire 1 |( inA [9] $end
$var wire 1 }( inA [8] $end
$var wire 1 ~( inA [7] $end
$var wire 1 !) inA [6] $end
$var wire 1 ") inA [5] $end
$var wire 1 #) inA [4] $end
$var wire 1 $) inA [3] $end
$var wire 1 %) inA [2] $end
$var wire 1 &) inA [1] $end
$var wire 1 ') inA [0] $end
$var wire 1 O" inB [15] $end
$var wire 1 P" inB [14] $end
$var wire 1 Q" inB [13] $end
$var wire 1 R" inB [12] $end
$var wire 1 S" inB [11] $end
$var wire 1 T" inB [10] $end
$var wire 1 U" inB [9] $end
$var wire 1 V" inB [8] $end
$var wire 1 W" inB [7] $end
$var wire 1 X" inB [6] $end
$var wire 1 Y" inB [5] $end
$var wire 1 Z" inB [4] $end
$var wire 1 [" inB [3] $end
$var wire 1 \" inB [2] $end
$var wire 1 ]" inB [1] $end
$var wire 1 ^" inB [0] $end
$var wire 1 &( out [15] $end
$var wire 1 '( out [14] $end
$var wire 1 (( out [13] $end
$var wire 1 )( out [12] $end
$var wire 1 *( out [11] $end
$var wire 1 +( out [10] $end
$var wire 1 ,( out [9] $end
$var wire 1 -( out [8] $end
$var wire 1 .( out [7] $end
$var wire 1 /( out [6] $end
$var wire 1 0( out [5] $end
$var wire 1 1( out [4] $end
$var wire 1 2( out [3] $end
$var wire 1 3( out [2] $end
$var wire 1 4( out [1] $end
$var wire 1 5( out [0] $end
$var wire 1 () mult_result [31] $end
$var wire 1 )) mult_result [30] $end
$var wire 1 *) mult_result [29] $end
$var wire 1 +) mult_result [28] $end
$var wire 1 ,) mult_result [27] $end
$var wire 1 -) mult_result [26] $end
$var wire 1 .) mult_result [25] $end
$var wire 1 /) mult_result [24] $end
$var wire 1 0) mult_result [23] $end
$var wire 1 1) mult_result [22] $end
$var wire 1 2) mult_result [21] $end
$var wire 1 3) mult_result [20] $end
$var wire 1 4) mult_result [19] $end
$var wire 1 5) mult_result [18] $end
$var wire 1 6) mult_result [17] $end
$var wire 1 7) mult_result [16] $end
$var wire 1 8) mult_result [15] $end
$var wire 1 9) mult_result [14] $end
$var wire 1 :) mult_result [13] $end
$var wire 1 ;) mult_result [12] $end
$var wire 1 <) mult_result [11] $end
$var wire 1 =) mult_result [10] $end
$var wire 1 >) mult_result [9] $end
$var wire 1 ?) mult_result [8] $end
$var wire 1 @) mult_result [7] $end
$var wire 1 A) mult_result [6] $end
$var wire 1 B) mult_result [5] $end
$var wire 1 C) mult_result [4] $end
$var wire 1 D) mult_result [3] $end
$var wire 1 E) mult_result [2] $end
$var wire 1 F) mult_result [1] $end
$var wire 1 G) mult_result [0] $end
$upscope $end

$scope module overflow_check $end
$var parameter 32 H) N $end
$var wire 1 3$ a [31] $end
$var wire 1 4$ a [30] $end
$var wire 1 5$ a [29] $end
$var wire 1 6$ a [28] $end
$var wire 1 7$ a [27] $end
$var wire 1 8$ a [26] $end
$var wire 1 9$ a [25] $end
$var wire 1 :$ a [24] $end
$var wire 1 ;$ a [23] $end
$var wire 1 <$ a [22] $end
$var wire 1 =$ a [21] $end
$var wire 1 >$ a [20] $end
$var wire 1 ?$ a [19] $end
$var wire 1 @$ a [18] $end
$var wire 1 A$ a [17] $end
$var wire 1 B$ a [16] $end
$var wire 1 C$ a [15] $end
$var wire 1 D$ a [14] $end
$var wire 1 E$ a [13] $end
$var wire 1 F$ a [12] $end
$var wire 1 G$ a [11] $end
$var wire 1 H$ a [10] $end
$var wire 1 I$ a [9] $end
$var wire 1 J$ a [8] $end
$var wire 1 K$ a [7] $end
$var wire 1 L$ a [6] $end
$var wire 1 M$ a [5] $end
$var wire 1 N$ a [4] $end
$var wire 1 O$ a [3] $end
$var wire 1 P$ a [2] $end
$var wire 1 Q$ a [1] $end
$var wire 1 R$ a [0] $end
$var wire 1 6( b [31] $end
$var wire 1 7( b [30] $end
$var wire 1 8( b [29] $end
$var wire 1 9( b [28] $end
$var wire 1 :( b [27] $end
$var wire 1 ;( b [26] $end
$var wire 1 <( b [25] $end
$var wire 1 =( b [24] $end
$var wire 1 >( b [23] $end
$var wire 1 ?( b [22] $end
$var wire 1 @( b [21] $end
$var wire 1 A( b [20] $end
$var wire 1 B( b [19] $end
$var wire 1 C( b [18] $end
$var wire 1 D( b [17] $end
$var wire 1 E( b [16] $end
$var wire 1 F( b [15] $end
$var wire 1 G( b [14] $end
$var wire 1 H( b [13] $end
$var wire 1 I( b [12] $end
$var wire 1 J( b [11] $end
$var wire 1 K( b [10] $end
$var wire 1 L( b [9] $end
$var wire 1 M( b [8] $end
$var wire 1 N( b [7] $end
$var wire 1 O( b [6] $end
$var wire 1 P( b [5] $end
$var wire 1 Q( b [4] $end
$var wire 1 R( b [3] $end
$var wire 1 S( b [2] $end
$var wire 1 T( b [1] $end
$var wire 1 U( b [0] $end
$var wire 1 S$ result [31] $end
$var wire 1 T$ result [30] $end
$var wire 1 U$ result [29] $end
$var wire 1 V$ result [28] $end
$var wire 1 W$ result [27] $end
$var wire 1 X$ result [26] $end
$var wire 1 Y$ result [25] $end
$var wire 1 Z$ result [24] $end
$var wire 1 [$ result [23] $end
$var wire 1 \$ result [22] $end
$var wire 1 ]$ result [21] $end
$var wire 1 ^$ result [20] $end
$var wire 1 _$ result [19] $end
$var wire 1 `$ result [18] $end
$var wire 1 a$ result [17] $end
$var wire 1 b$ result [16] $end
$var wire 1 c$ result [15] $end
$var wire 1 d$ result [14] $end
$var wire 1 e$ result [13] $end
$var wire 1 f$ result [12] $end
$var wire 1 g$ result [11] $end
$var wire 1 h$ result [10] $end
$var wire 1 i$ result [9] $end
$var wire 1 j$ result [8] $end
$var wire 1 k$ result [7] $end
$var wire 1 l$ result [6] $end
$var wire 1 m$ result [5] $end
$var wire 1 n$ result [4] $end
$var wire 1 o$ result [3] $end
$var wire 1 p$ result [2] $end
$var wire 1 q$ result [1] $end
$var wire 1 r$ result [0] $end
$var wire 1 =' operation $end
$var wire 1 9' overflow $end
$var wire 1 I) msb_a $end
$var wire 1 J) msb_b $end
$var wire 1 K) msb_result $end
$var wire 1 L) add_overflow $end
$var wire 1 M) sub_overflow $end
$upscope $end
$upscope $end

$scope module reg_stage01_result $end
$var parameter 32 N) N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 S$ in [31] $end
$var wire 1 T$ in [30] $end
$var wire 1 U$ in [29] $end
$var wire 1 V$ in [28] $end
$var wire 1 W$ in [27] $end
$var wire 1 X$ in [26] $end
$var wire 1 Y$ in [25] $end
$var wire 1 Z$ in [24] $end
$var wire 1 [$ in [23] $end
$var wire 1 \$ in [22] $end
$var wire 1 ]$ in [21] $end
$var wire 1 ^$ in [20] $end
$var wire 1 _$ in [19] $end
$var wire 1 `$ in [18] $end
$var wire 1 a$ in [17] $end
$var wire 1 b$ in [16] $end
$var wire 1 c$ in [15] $end
$var wire 1 d$ in [14] $end
$var wire 1 e$ in [13] $end
$var wire 1 f$ in [12] $end
$var wire 1 g$ in [11] $end
$var wire 1 h$ in [10] $end
$var wire 1 i$ in [9] $end
$var wire 1 j$ in [8] $end
$var wire 1 k$ in [7] $end
$var wire 1 l$ in [6] $end
$var wire 1 m$ in [5] $end
$var wire 1 n$ in [4] $end
$var wire 1 o$ in [3] $end
$var wire 1 p$ in [2] $end
$var wire 1 q$ in [1] $end
$var wire 1 r$ in [0] $end
$var reg 32 O) out [31:0] $end
$upscope $end

$scope module reg_stage01_x_power $end
$var parameter 32 P) N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 o" in [15] $end
$var wire 1 p" in [14] $end
$var wire 1 q" in [13] $end
$var wire 1 r" in [12] $end
$var wire 1 s" in [11] $end
$var wire 1 t" in [10] $end
$var wire 1 u" in [9] $end
$var wire 1 v" in [8] $end
$var wire 1 w" in [7] $end
$var wire 1 x" in [6] $end
$var wire 1 y" in [5] $end
$var wire 1 z" in [4] $end
$var wire 1 {" in [3] $end
$var wire 1 |" in [2] $end
$var wire 1 }" in [1] $end
$var wire 1 ~" in [0] $end
$var reg 16 Q) out [15:0] $end
$upscope $end

$scope module reg_stage01_num $end
$var parameter 32 R) N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 s in [2] $end
$var wire 1 t in [1] $end
$var wire 1 u in [0] $end
$var reg 3 S) out [2:0] $end
$upscope $end

$scope module stage1 $end
$var wire 1 L clk $end
$var wire 1 m N_input [2] $end
$var wire 1 n N_input [1] $end
$var wire 1 o N_input [0] $end
$var wire 1 _" X_input [15] $end
$var wire 1 `" X_input [14] $end
$var wire 1 a" X_input [13] $end
$var wire 1 b" X_input [12] $end
$var wire 1 c" X_input [11] $end
$var wire 1 d" X_input [10] $end
$var wire 1 e" X_input [9] $end
$var wire 1 f" X_input [8] $end
$var wire 1 g" X_input [7] $end
$var wire 1 h" X_input [6] $end
$var wire 1 i" X_input [5] $end
$var wire 1 j" X_input [4] $end
$var wire 1 k" X_input [3] $end
$var wire 1 l" X_input [2] $end
$var wire 1 m" X_input [1] $end
$var wire 1 n" X_input [0] $end
$var wire 1 -! memory [127] $end
$var wire 1 .! memory [126] $end
$var wire 1 /! memory [125] $end
$var wire 1 0! memory [124] $end
$var wire 1 1! memory [123] $end
$var wire 1 2! memory [122] $end
$var wire 1 3! memory [121] $end
$var wire 1 4! memory [120] $end
$var wire 1 5! memory [119] $end
$var wire 1 6! memory [118] $end
$var wire 1 7! memory [117] $end
$var wire 1 8! memory [116] $end
$var wire 1 9! memory [115] $end
$var wire 1 :! memory [114] $end
$var wire 1 ;! memory [113] $end
$var wire 1 <! memory [112] $end
$var wire 1 =! memory [111] $end
$var wire 1 >! memory [110] $end
$var wire 1 ?! memory [109] $end
$var wire 1 @! memory [108] $end
$var wire 1 A! memory [107] $end
$var wire 1 B! memory [106] $end
$var wire 1 C! memory [105] $end
$var wire 1 D! memory [104] $end
$var wire 1 E! memory [103] $end
$var wire 1 F! memory [102] $end
$var wire 1 G! memory [101] $end
$var wire 1 H! memory [100] $end
$var wire 1 I! memory [99] $end
$var wire 1 J! memory [98] $end
$var wire 1 K! memory [97] $end
$var wire 1 L! memory [96] $end
$var wire 1 M! memory [95] $end
$var wire 1 N! memory [94] $end
$var wire 1 O! memory [93] $end
$var wire 1 P! memory [92] $end
$var wire 1 Q! memory [91] $end
$var wire 1 R! memory [90] $end
$var wire 1 S! memory [89] $end
$var wire 1 T! memory [88] $end
$var wire 1 U! memory [87] $end
$var wire 1 V! memory [86] $end
$var wire 1 W! memory [85] $end
$var wire 1 X! memory [84] $end
$var wire 1 Y! memory [83] $end
$var wire 1 Z! memory [82] $end
$var wire 1 [! memory [81] $end
$var wire 1 \! memory [80] $end
$var wire 1 ]! memory [79] $end
$var wire 1 ^! memory [78] $end
$var wire 1 _! memory [77] $end
$var wire 1 `! memory [76] $end
$var wire 1 a! memory [75] $end
$var wire 1 b! memory [74] $end
$var wire 1 c! memory [73] $end
$var wire 1 d! memory [72] $end
$var wire 1 e! memory [71] $end
$var wire 1 f! memory [70] $end
$var wire 1 g! memory [69] $end
$var wire 1 h! memory [68] $end
$var wire 1 i! memory [67] $end
$var wire 1 j! memory [66] $end
$var wire 1 k! memory [65] $end
$var wire 1 l! memory [64] $end
$var wire 1 m! memory [63] $end
$var wire 1 n! memory [62] $end
$var wire 1 o! memory [61] $end
$var wire 1 p! memory [60] $end
$var wire 1 q! memory [59] $end
$var wire 1 r! memory [58] $end
$var wire 1 s! memory [57] $end
$var wire 1 t! memory [56] $end
$var wire 1 u! memory [55] $end
$var wire 1 v! memory [54] $end
$var wire 1 w! memory [53] $end
$var wire 1 x! memory [52] $end
$var wire 1 y! memory [51] $end
$var wire 1 z! memory [50] $end
$var wire 1 {! memory [49] $end
$var wire 1 |! memory [48] $end
$var wire 1 }! memory [47] $end
$var wire 1 ~! memory [46] $end
$var wire 1 !" memory [45] $end
$var wire 1 "" memory [44] $end
$var wire 1 #" memory [43] $end
$var wire 1 $" memory [42] $end
$var wire 1 %" memory [41] $end
$var wire 1 &" memory [40] $end
$var wire 1 '" memory [39] $end
$var wire 1 (" memory [38] $end
$var wire 1 )" memory [37] $end
$var wire 1 *" memory [36] $end
$var wire 1 +" memory [35] $end
$var wire 1 ," memory [34] $end
$var wire 1 -" memory [33] $end
$var wire 1 ." memory [32] $end
$var wire 1 /" memory [31] $end
$var wire 1 0" memory [30] $end
$var wire 1 1" memory [29] $end
$var wire 1 2" memory [28] $end
$var wire 1 3" memory [27] $end
$var wire 1 4" memory [26] $end
$var wire 1 5" memory [25] $end
$var wire 1 6" memory [24] $end
$var wire 1 7" memory [23] $end
$var wire 1 8" memory [22] $end
$var wire 1 9" memory [21] $end
$var wire 1 :" memory [20] $end
$var wire 1 ;" memory [19] $end
$var wire 1 <" memory [18] $end
$var wire 1 =" memory [17] $end
$var wire 1 >" memory [16] $end
$var wire 1 ?" memory [15] $end
$var wire 1 @" memory [14] $end
$var wire 1 A" memory [13] $end
$var wire 1 B" memory [12] $end
$var wire 1 C" memory [11] $end
$var wire 1 D" memory [10] $end
$var wire 1 E" memory [9] $end
$var wire 1 F" memory [8] $end
$var wire 1 G" memory [7] $end
$var wire 1 H" memory [6] $end
$var wire 1 I" memory [5] $end
$var wire 1 J" memory [4] $end
$var wire 1 K" memory [3] $end
$var wire 1 L" memory [2] $end
$var wire 1 M" memory [1] $end
$var wire 1 N" memory [0] $end
$var wire 1 >' stage_sign $end
$var wire 1 s$ prev_stage_result [31] $end
$var wire 1 t$ prev_stage_result [30] $end
$var wire 1 u$ prev_stage_result [29] $end
$var wire 1 v$ prev_stage_result [28] $end
$var wire 1 w$ prev_stage_result [27] $end
$var wire 1 x$ prev_stage_result [26] $end
$var wire 1 y$ prev_stage_result [25] $end
$var wire 1 z$ prev_stage_result [24] $end
$var wire 1 {$ prev_stage_result [23] $end
$var wire 1 |$ prev_stage_result [22] $end
$var wire 1 }$ prev_stage_result [21] $end
$var wire 1 ~$ prev_stage_result [20] $end
$var wire 1 !% prev_stage_result [19] $end
$var wire 1 "% prev_stage_result [18] $end
$var wire 1 #% prev_stage_result [17] $end
$var wire 1 $% prev_stage_result [16] $end
$var wire 1 %% prev_stage_result [15] $end
$var wire 1 &% prev_stage_result [14] $end
$var wire 1 '% prev_stage_result [13] $end
$var wire 1 (% prev_stage_result [12] $end
$var wire 1 )% prev_stage_result [11] $end
$var wire 1 *% prev_stage_result [10] $end
$var wire 1 +% prev_stage_result [9] $end
$var wire 1 ,% prev_stage_result [8] $end
$var wire 1 -% prev_stage_result [7] $end
$var wire 1 .% prev_stage_result [6] $end
$var wire 1 /% prev_stage_result [5] $end
$var wire 1 0% prev_stage_result [4] $end
$var wire 1 1% prev_stage_result [3] $end
$var wire 1 2% prev_stage_result [2] $end
$var wire 1 3% prev_stage_result [1] $end
$var wire 1 4% prev_stage_result [0] $end
$var wire 1 Q# current_x_power [15] $end
$var wire 1 R# current_x_power [14] $end
$var wire 1 S# current_x_power [13] $end
$var wire 1 T# current_x_power [12] $end
$var wire 1 U# current_x_power [11] $end
$var wire 1 V# current_x_power [10] $end
$var wire 1 W# current_x_power [9] $end
$var wire 1 X# current_x_power [8] $end
$var wire 1 Y# current_x_power [7] $end
$var wire 1 Z# current_x_power [6] $end
$var wire 1 [# current_x_power [5] $end
$var wire 1 \# current_x_power [4] $end
$var wire 1 ]# current_x_power [3] $end
$var wire 1 ^# current_x_power [2] $end
$var wire 1 _# current_x_power [1] $end
$var wire 1 `# current_x_power [0] $end
$var wire 1 !! current_stage_num [2] $end
$var wire 1 "! current_stage_num [1] $end
$var wire 1 #! current_stage_num [0] $end
$var wire 1 5% current_stage_result [31] $end
$var wire 1 6% current_stage_result [30] $end
$var wire 1 7% current_stage_result [29] $end
$var wire 1 8% current_stage_result [28] $end
$var wire 1 9% current_stage_result [27] $end
$var wire 1 :% current_stage_result [26] $end
$var wire 1 ;% current_stage_result [25] $end
$var wire 1 <% current_stage_result [24] $end
$var wire 1 =% current_stage_result [23] $end
$var wire 1 >% current_stage_result [22] $end
$var wire 1 ?% current_stage_result [21] $end
$var wire 1 @% current_stage_result [20] $end
$var wire 1 A% current_stage_result [19] $end
$var wire 1 B% current_stage_result [18] $end
$var wire 1 C% current_stage_result [17] $end
$var wire 1 D% current_stage_result [16] $end
$var wire 1 E% current_stage_result [15] $end
$var wire 1 F% current_stage_result [14] $end
$var wire 1 G% current_stage_result [13] $end
$var wire 1 H% current_stage_result [12] $end
$var wire 1 I% current_stage_result [11] $end
$var wire 1 J% current_stage_result [10] $end
$var wire 1 K% current_stage_result [9] $end
$var wire 1 L% current_stage_result [8] $end
$var wire 1 M% current_stage_result [7] $end
$var wire 1 N% current_stage_result [6] $end
$var wire 1 O% current_stage_result [5] $end
$var wire 1 P% current_stage_result [4] $end
$var wire 1 Q% current_stage_result [3] $end
$var wire 1 R% current_stage_result [2] $end
$var wire 1 S% current_stage_result [1] $end
$var wire 1 T% current_stage_result [0] $end
$var wire 1 !# next_x_power [15] $end
$var wire 1 "# next_x_power [14] $end
$var wire 1 ## next_x_power [13] $end
$var wire 1 $# next_x_power [12] $end
$var wire 1 %# next_x_power [11] $end
$var wire 1 &# next_x_power [10] $end
$var wire 1 '# next_x_power [9] $end
$var wire 1 (# next_x_power [8] $end
$var wire 1 )# next_x_power [7] $end
$var wire 1 *# next_x_power [6] $end
$var wire 1 +# next_x_power [5] $end
$var wire 1 ,# next_x_power [4] $end
$var wire 1 -# next_x_power [3] $end
$var wire 1 .# next_x_power [2] $end
$var wire 1 /# next_x_power [1] $end
$var wire 1 0# next_x_power [0] $end
$var wire 1 v next_stage_num [2] $end
$var wire 1 w next_stage_num [1] $end
$var wire 1 x next_stage_num [0] $end
$var wire 1 :' overflow $end
$var wire 1 T) mult_result [15] $end
$var wire 1 U) mult_result [14] $end
$var wire 1 V) mult_result [13] $end
$var wire 1 W) mult_result [12] $end
$var wire 1 X) mult_result [11] $end
$var wire 1 Y) mult_result [10] $end
$var wire 1 Z) mult_result [9] $end
$var wire 1 [) mult_result [8] $end
$var wire 1 \) mult_result [7] $end
$var wire 1 ]) mult_result [6] $end
$var wire 1 ^) mult_result [5] $end
$var wire 1 _) mult_result [4] $end
$var wire 1 `) mult_result [3] $end
$var wire 1 a) mult_result [2] $end
$var wire 1 b) mult_result [1] $end
$var wire 1 c) mult_result [0] $end
$var wire 1 d) mult_result_sign_extended [31] $end
$var wire 1 e) mult_result_sign_extended [30] $end
$var wire 1 f) mult_result_sign_extended [29] $end
$var wire 1 g) mult_result_sign_extended [28] $end
$var wire 1 h) mult_result_sign_extended [27] $end
$var wire 1 i) mult_result_sign_extended [26] $end
$var wire 1 j) mult_result_sign_extended [25] $end
$var wire 1 k) mult_result_sign_extended [24] $end
$var wire 1 l) mult_result_sign_extended [23] $end
$var wire 1 m) mult_result_sign_extended [22] $end
$var wire 1 n) mult_result_sign_extended [21] $end
$var wire 1 o) mult_result_sign_extended [20] $end
$var wire 1 p) mult_result_sign_extended [19] $end
$var wire 1 q) mult_result_sign_extended [18] $end
$var wire 1 r) mult_result_sign_extended [17] $end
$var wire 1 s) mult_result_sign_extended [16] $end
$var wire 1 t) mult_result_sign_extended [15] $end
$var wire 1 u) mult_result_sign_extended [14] $end
$var wire 1 v) mult_result_sign_extended [13] $end
$var wire 1 w) mult_result_sign_extended [12] $end
$var wire 1 x) mult_result_sign_extended [11] $end
$var wire 1 y) mult_result_sign_extended [10] $end
$var wire 1 z) mult_result_sign_extended [9] $end
$var wire 1 {) mult_result_sign_extended [8] $end
$var wire 1 |) mult_result_sign_extended [7] $end
$var wire 1 }) mult_result_sign_extended [6] $end
$var wire 1 ~) mult_result_sign_extended [5] $end
$var wire 1 !* mult_result_sign_extended [4] $end
$var wire 1 "* mult_result_sign_extended [3] $end
$var wire 1 #* mult_result_sign_extended [2] $end
$var wire 1 $* mult_result_sign_extended [1] $end
$var wire 1 %* mult_result_sign_extended [0] $end

$scope module mult $end
$var wire 1 Q# inA [15] $end
$var wire 1 R# inA [14] $end
$var wire 1 S# inA [13] $end
$var wire 1 T# inA [12] $end
$var wire 1 U# inA [11] $end
$var wire 1 V# inA [10] $end
$var wire 1 W# inA [9] $end
$var wire 1 X# inA [8] $end
$var wire 1 Y# inA [7] $end
$var wire 1 Z# inA [6] $end
$var wire 1 [# inA [5] $end
$var wire 1 \# inA [4] $end
$var wire 1 ]# inA [3] $end
$var wire 1 ^# inA [2] $end
$var wire 1 _# inA [1] $end
$var wire 1 `# inA [0] $end
$var wire 1 _" inB [15] $end
$var wire 1 `" inB [14] $end
$var wire 1 a" inB [13] $end
$var wire 1 b" inB [12] $end
$var wire 1 c" inB [11] $end
$var wire 1 d" inB [10] $end
$var wire 1 e" inB [9] $end
$var wire 1 f" inB [8] $end
$var wire 1 g" inB [7] $end
$var wire 1 h" inB [6] $end
$var wire 1 i" inB [5] $end
$var wire 1 j" inB [4] $end
$var wire 1 k" inB [3] $end
$var wire 1 l" inB [2] $end
$var wire 1 m" inB [1] $end
$var wire 1 n" inB [0] $end
$var wire 1 !# out [15] $end
$var wire 1 "# out [14] $end
$var wire 1 ## out [13] $end
$var wire 1 $# out [12] $end
$var wire 1 %# out [11] $end
$var wire 1 &# out [10] $end
$var wire 1 '# out [9] $end
$var wire 1 (# out [8] $end
$var wire 1 )# out [7] $end
$var wire 1 *# out [6] $end
$var wire 1 +# out [5] $end
$var wire 1 ,# out [4] $end
$var wire 1 -# out [3] $end
$var wire 1 .# out [2] $end
$var wire 1 /# out [1] $end
$var wire 1 0# out [0] $end
$var wire 1 &* mult_result [31] $end
$var wire 1 '* mult_result [30] $end
$var wire 1 (* mult_result [29] $end
$var wire 1 )* mult_result [28] $end
$var wire 1 ** mult_result [27] $end
$var wire 1 +* mult_result [26] $end
$var wire 1 ,* mult_result [25] $end
$var wire 1 -* mult_result [24] $end
$var wire 1 .* mult_result [23] $end
$var wire 1 /* mult_result [22] $end
$var wire 1 0* mult_result [21] $end
$var wire 1 1* mult_result [20] $end
$var wire 1 2* mult_result [19] $end
$var wire 1 3* mult_result [18] $end
$var wire 1 4* mult_result [17] $end
$var wire 1 5* mult_result [16] $end
$var wire 1 6* mult_result [15] $end
$var wire 1 7* mult_result [14] $end
$var wire 1 8* mult_result [13] $end
$var wire 1 9* mult_result [12] $end
$var wire 1 :* mult_result [11] $end
$var wire 1 ;* mult_result [10] $end
$var wire 1 <* mult_result [9] $end
$var wire 1 =* mult_result [8] $end
$var wire 1 >* mult_result [7] $end
$var wire 1 ?* mult_result [6] $end
$var wire 1 @* mult_result [5] $end
$var wire 1 A* mult_result [4] $end
$var wire 1 B* mult_result [3] $end
$var wire 1 C* mult_result [2] $end
$var wire 1 D* mult_result [1] $end
$var wire 1 E* mult_result [0] $end
$upscope $end

$scope module mult2 $end
$var wire 1 F* inA [15] $end
$var wire 1 G* inA [14] $end
$var wire 1 H* inA [13] $end
$var wire 1 I* inA [12] $end
$var wire 1 J* inA [11] $end
$var wire 1 K* inA [10] $end
$var wire 1 L* inA [9] $end
$var wire 1 M* inA [8] $end
$var wire 1 N* inA [7] $end
$var wire 1 O* inA [6] $end
$var wire 1 P* inA [5] $end
$var wire 1 Q* inA [4] $end
$var wire 1 R* inA [3] $end
$var wire 1 S* inA [2] $end
$var wire 1 T* inA [1] $end
$var wire 1 U* inA [0] $end
$var wire 1 Q# inB [15] $end
$var wire 1 R# inB [14] $end
$var wire 1 S# inB [13] $end
$var wire 1 T# inB [12] $end
$var wire 1 U# inB [11] $end
$var wire 1 V# inB [10] $end
$var wire 1 W# inB [9] $end
$var wire 1 X# inB [8] $end
$var wire 1 Y# inB [7] $end
$var wire 1 Z# inB [6] $end
$var wire 1 [# inB [5] $end
$var wire 1 \# inB [4] $end
$var wire 1 ]# inB [3] $end
$var wire 1 ^# inB [2] $end
$var wire 1 _# inB [1] $end
$var wire 1 `# inB [0] $end
$var wire 1 T) out [15] $end
$var wire 1 U) out [14] $end
$var wire 1 V) out [13] $end
$var wire 1 W) out [12] $end
$var wire 1 X) out [11] $end
$var wire 1 Y) out [10] $end
$var wire 1 Z) out [9] $end
$var wire 1 [) out [8] $end
$var wire 1 \) out [7] $end
$var wire 1 ]) out [6] $end
$var wire 1 ^) out [5] $end
$var wire 1 _) out [4] $end
$var wire 1 `) out [3] $end
$var wire 1 a) out [2] $end
$var wire 1 b) out [1] $end
$var wire 1 c) out [0] $end
$var wire 1 V* mult_result [31] $end
$var wire 1 W* mult_result [30] $end
$var wire 1 X* mult_result [29] $end
$var wire 1 Y* mult_result [28] $end
$var wire 1 Z* mult_result [27] $end
$var wire 1 [* mult_result [26] $end
$var wire 1 \* mult_result [25] $end
$var wire 1 ]* mult_result [24] $end
$var wire 1 ^* mult_result [23] $end
$var wire 1 _* mult_result [22] $end
$var wire 1 `* mult_result [21] $end
$var wire 1 a* mult_result [20] $end
$var wire 1 b* mult_result [19] $end
$var wire 1 c* mult_result [18] $end
$var wire 1 d* mult_result [17] $end
$var wire 1 e* mult_result [16] $end
$var wire 1 f* mult_result [15] $end
$var wire 1 g* mult_result [14] $end
$var wire 1 h* mult_result [13] $end
$var wire 1 i* mult_result [12] $end
$var wire 1 j* mult_result [11] $end
$var wire 1 k* mult_result [10] $end
$var wire 1 l* mult_result [9] $end
$var wire 1 m* mult_result [8] $end
$var wire 1 n* mult_result [7] $end
$var wire 1 o* mult_result [6] $end
$var wire 1 p* mult_result [5] $end
$var wire 1 q* mult_result [4] $end
$var wire 1 r* mult_result [3] $end
$var wire 1 s* mult_result [2] $end
$var wire 1 t* mult_result [1] $end
$var wire 1 u* mult_result [0] $end
$upscope $end

$scope module overflow_check $end
$var parameter 32 v* N $end
$var wire 1 s$ a [31] $end
$var wire 1 t$ a [30] $end
$var wire 1 u$ a [29] $end
$var wire 1 v$ a [28] $end
$var wire 1 w$ a [27] $end
$var wire 1 x$ a [26] $end
$var wire 1 y$ a [25] $end
$var wire 1 z$ a [24] $end
$var wire 1 {$ a [23] $end
$var wire 1 |$ a [22] $end
$var wire 1 }$ a [21] $end
$var wire 1 ~$ a [20] $end
$var wire 1 !% a [19] $end
$var wire 1 "% a [18] $end
$var wire 1 #% a [17] $end
$var wire 1 $% a [16] $end
$var wire 1 %% a [15] $end
$var wire 1 &% a [14] $end
$var wire 1 '% a [13] $end
$var wire 1 (% a [12] $end
$var wire 1 )% a [11] $end
$var wire 1 *% a [10] $end
$var wire 1 +% a [9] $end
$var wire 1 ,% a [8] $end
$var wire 1 -% a [7] $end
$var wire 1 .% a [6] $end
$var wire 1 /% a [5] $end
$var wire 1 0% a [4] $end
$var wire 1 1% a [3] $end
$var wire 1 2% a [2] $end
$var wire 1 3% a [1] $end
$var wire 1 4% a [0] $end
$var wire 1 d) b [31] $end
$var wire 1 e) b [30] $end
$var wire 1 f) b [29] $end
$var wire 1 g) b [28] $end
$var wire 1 h) b [27] $end
$var wire 1 i) b [26] $end
$var wire 1 j) b [25] $end
$var wire 1 k) b [24] $end
$var wire 1 l) b [23] $end
$var wire 1 m) b [22] $end
$var wire 1 n) b [21] $end
$var wire 1 o) b [20] $end
$var wire 1 p) b [19] $end
$var wire 1 q) b [18] $end
$var wire 1 r) b [17] $end
$var wire 1 s) b [16] $end
$var wire 1 t) b [15] $end
$var wire 1 u) b [14] $end
$var wire 1 v) b [13] $end
$var wire 1 w) b [12] $end
$var wire 1 x) b [11] $end
$var wire 1 y) b [10] $end
$var wire 1 z) b [9] $end
$var wire 1 {) b [8] $end
$var wire 1 |) b [7] $end
$var wire 1 }) b [6] $end
$var wire 1 ~) b [5] $end
$var wire 1 !* b [4] $end
$var wire 1 "* b [3] $end
$var wire 1 #* b [2] $end
$var wire 1 $* b [1] $end
$var wire 1 %* b [0] $end
$var wire 1 5% result [31] $end
$var wire 1 6% result [30] $end
$var wire 1 7% result [29] $end
$var wire 1 8% result [28] $end
$var wire 1 9% result [27] $end
$var wire 1 :% result [26] $end
$var wire 1 ;% result [25] $end
$var wire 1 <% result [24] $end
$var wire 1 =% result [23] $end
$var wire 1 >% result [22] $end
$var wire 1 ?% result [21] $end
$var wire 1 @% result [20] $end
$var wire 1 A% result [19] $end
$var wire 1 B% result [18] $end
$var wire 1 C% result [17] $end
$var wire 1 D% result [16] $end
$var wire 1 E% result [15] $end
$var wire 1 F% result [14] $end
$var wire 1 G% result [13] $end
$var wire 1 H% result [12] $end
$var wire 1 I% result [11] $end
$var wire 1 J% result [10] $end
$var wire 1 K% result [9] $end
$var wire 1 L% result [8] $end
$var wire 1 M% result [7] $end
$var wire 1 N% result [6] $end
$var wire 1 O% result [5] $end
$var wire 1 P% result [4] $end
$var wire 1 Q% result [3] $end
$var wire 1 R% result [2] $end
$var wire 1 S% result [1] $end
$var wire 1 T% result [0] $end
$var wire 1 >' operation $end
$var wire 1 :' overflow $end
$var wire 1 w* msb_a $end
$var wire 1 x* msb_b $end
$var wire 1 y* msb_result $end
$var wire 1 z* add_overflow $end
$var wire 1 {* sub_overflow $end
$upscope $end
$upscope $end

$scope module reg_stage12_result $end
$var parameter 32 |* N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 5% in [31] $end
$var wire 1 6% in [30] $end
$var wire 1 7% in [29] $end
$var wire 1 8% in [28] $end
$var wire 1 9% in [27] $end
$var wire 1 :% in [26] $end
$var wire 1 ;% in [25] $end
$var wire 1 <% in [24] $end
$var wire 1 =% in [23] $end
$var wire 1 >% in [22] $end
$var wire 1 ?% in [21] $end
$var wire 1 @% in [20] $end
$var wire 1 A% in [19] $end
$var wire 1 B% in [18] $end
$var wire 1 C% in [17] $end
$var wire 1 D% in [16] $end
$var wire 1 E% in [15] $end
$var wire 1 F% in [14] $end
$var wire 1 G% in [13] $end
$var wire 1 H% in [12] $end
$var wire 1 I% in [11] $end
$var wire 1 J% in [10] $end
$var wire 1 K% in [9] $end
$var wire 1 L% in [8] $end
$var wire 1 M% in [7] $end
$var wire 1 N% in [6] $end
$var wire 1 O% in [5] $end
$var wire 1 P% in [4] $end
$var wire 1 Q% in [3] $end
$var wire 1 R% in [2] $end
$var wire 1 S% in [1] $end
$var wire 1 T% in [0] $end
$var reg 32 }* out [31:0] $end
$upscope $end

$scope module reg_stage12_x_power $end
$var parameter 32 ~* N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 !# in [15] $end
$var wire 1 "# in [14] $end
$var wire 1 ## in [13] $end
$var wire 1 $# in [12] $end
$var wire 1 %# in [11] $end
$var wire 1 &# in [10] $end
$var wire 1 '# in [9] $end
$var wire 1 (# in [8] $end
$var wire 1 )# in [7] $end
$var wire 1 *# in [6] $end
$var wire 1 +# in [5] $end
$var wire 1 ,# in [4] $end
$var wire 1 -# in [3] $end
$var wire 1 .# in [2] $end
$var wire 1 /# in [1] $end
$var wire 1 0# in [0] $end
$var reg 16 !+ out [15:0] $end
$upscope $end

$scope module reg_stage12_num $end
$var parameter 32 "+ N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 v in [2] $end
$var wire 1 w in [1] $end
$var wire 1 x in [0] $end
$var reg 3 #+ out [2:0] $end
$upscope $end

$scope module stage2 $end
$var wire 1 L clk $end
$var wire 1 m N_input [2] $end
$var wire 1 n N_input [1] $end
$var wire 1 o N_input [0] $end
$var wire 1 _" X_input [15] $end
$var wire 1 `" X_input [14] $end
$var wire 1 a" X_input [13] $end
$var wire 1 b" X_input [12] $end
$var wire 1 c" X_input [11] $end
$var wire 1 d" X_input [10] $end
$var wire 1 e" X_input [9] $end
$var wire 1 f" X_input [8] $end
$var wire 1 g" X_input [7] $end
$var wire 1 h" X_input [6] $end
$var wire 1 i" X_input [5] $end
$var wire 1 j" X_input [4] $end
$var wire 1 k" X_input [3] $end
$var wire 1 l" X_input [2] $end
$var wire 1 m" X_input [1] $end
$var wire 1 n" X_input [0] $end
$var wire 1 -! memory [127] $end
$var wire 1 .! memory [126] $end
$var wire 1 /! memory [125] $end
$var wire 1 0! memory [124] $end
$var wire 1 1! memory [123] $end
$var wire 1 2! memory [122] $end
$var wire 1 3! memory [121] $end
$var wire 1 4! memory [120] $end
$var wire 1 5! memory [119] $end
$var wire 1 6! memory [118] $end
$var wire 1 7! memory [117] $end
$var wire 1 8! memory [116] $end
$var wire 1 9! memory [115] $end
$var wire 1 :! memory [114] $end
$var wire 1 ;! memory [113] $end
$var wire 1 <! memory [112] $end
$var wire 1 =! memory [111] $end
$var wire 1 >! memory [110] $end
$var wire 1 ?! memory [109] $end
$var wire 1 @! memory [108] $end
$var wire 1 A! memory [107] $end
$var wire 1 B! memory [106] $end
$var wire 1 C! memory [105] $end
$var wire 1 D! memory [104] $end
$var wire 1 E! memory [103] $end
$var wire 1 F! memory [102] $end
$var wire 1 G! memory [101] $end
$var wire 1 H! memory [100] $end
$var wire 1 I! memory [99] $end
$var wire 1 J! memory [98] $end
$var wire 1 K! memory [97] $end
$var wire 1 L! memory [96] $end
$var wire 1 M! memory [95] $end
$var wire 1 N! memory [94] $end
$var wire 1 O! memory [93] $end
$var wire 1 P! memory [92] $end
$var wire 1 Q! memory [91] $end
$var wire 1 R! memory [90] $end
$var wire 1 S! memory [89] $end
$var wire 1 T! memory [88] $end
$var wire 1 U! memory [87] $end
$var wire 1 V! memory [86] $end
$var wire 1 W! memory [85] $end
$var wire 1 X! memory [84] $end
$var wire 1 Y! memory [83] $end
$var wire 1 Z! memory [82] $end
$var wire 1 [! memory [81] $end
$var wire 1 \! memory [80] $end
$var wire 1 ]! memory [79] $end
$var wire 1 ^! memory [78] $end
$var wire 1 _! memory [77] $end
$var wire 1 `! memory [76] $end
$var wire 1 a! memory [75] $end
$var wire 1 b! memory [74] $end
$var wire 1 c! memory [73] $end
$var wire 1 d! memory [72] $end
$var wire 1 e! memory [71] $end
$var wire 1 f! memory [70] $end
$var wire 1 g! memory [69] $end
$var wire 1 h! memory [68] $end
$var wire 1 i! memory [67] $end
$var wire 1 j! memory [66] $end
$var wire 1 k! memory [65] $end
$var wire 1 l! memory [64] $end
$var wire 1 m! memory [63] $end
$var wire 1 n! memory [62] $end
$var wire 1 o! memory [61] $end
$var wire 1 p! memory [60] $end
$var wire 1 q! memory [59] $end
$var wire 1 r! memory [58] $end
$var wire 1 s! memory [57] $end
$var wire 1 t! memory [56] $end
$var wire 1 u! memory [55] $end
$var wire 1 v! memory [54] $end
$var wire 1 w! memory [53] $end
$var wire 1 x! memory [52] $end
$var wire 1 y! memory [51] $end
$var wire 1 z! memory [50] $end
$var wire 1 {! memory [49] $end
$var wire 1 |! memory [48] $end
$var wire 1 }! memory [47] $end
$var wire 1 ~! memory [46] $end
$var wire 1 !" memory [45] $end
$var wire 1 "" memory [44] $end
$var wire 1 #" memory [43] $end
$var wire 1 $" memory [42] $end
$var wire 1 %" memory [41] $end
$var wire 1 &" memory [40] $end
$var wire 1 '" memory [39] $end
$var wire 1 (" memory [38] $end
$var wire 1 )" memory [37] $end
$var wire 1 *" memory [36] $end
$var wire 1 +" memory [35] $end
$var wire 1 ," memory [34] $end
$var wire 1 -" memory [33] $end
$var wire 1 ." memory [32] $end
$var wire 1 /" memory [31] $end
$var wire 1 0" memory [30] $end
$var wire 1 1" memory [29] $end
$var wire 1 2" memory [28] $end
$var wire 1 3" memory [27] $end
$var wire 1 4" memory [26] $end
$var wire 1 5" memory [25] $end
$var wire 1 6" memory [24] $end
$var wire 1 7" memory [23] $end
$var wire 1 8" memory [22] $end
$var wire 1 9" memory [21] $end
$var wire 1 :" memory [20] $end
$var wire 1 ;" memory [19] $end
$var wire 1 <" memory [18] $end
$var wire 1 =" memory [17] $end
$var wire 1 >" memory [16] $end
$var wire 1 ?" memory [15] $end
$var wire 1 @" memory [14] $end
$var wire 1 A" memory [13] $end
$var wire 1 B" memory [12] $end
$var wire 1 C" memory [11] $end
$var wire 1 D" memory [10] $end
$var wire 1 E" memory [9] $end
$var wire 1 F" memory [8] $end
$var wire 1 G" memory [7] $end
$var wire 1 H" memory [6] $end
$var wire 1 I" memory [5] $end
$var wire 1 J" memory [4] $end
$var wire 1 K" memory [3] $end
$var wire 1 L" memory [2] $end
$var wire 1 M" memory [1] $end
$var wire 1 N" memory [0] $end
$var wire 1 =' stage_sign $end
$var wire 1 U% prev_stage_result [31] $end
$var wire 1 V% prev_stage_result [30] $end
$var wire 1 W% prev_stage_result [29] $end
$var wire 1 X% prev_stage_result [28] $end
$var wire 1 Y% prev_stage_result [27] $end
$var wire 1 Z% prev_stage_result [26] $end
$var wire 1 [% prev_stage_result [25] $end
$var wire 1 \% prev_stage_result [24] $end
$var wire 1 ]% prev_stage_result [23] $end
$var wire 1 ^% prev_stage_result [22] $end
$var wire 1 _% prev_stage_result [21] $end
$var wire 1 `% prev_stage_result [20] $end
$var wire 1 a% prev_stage_result [19] $end
$var wire 1 b% prev_stage_result [18] $end
$var wire 1 c% prev_stage_result [17] $end
$var wire 1 d% prev_stage_result [16] $end
$var wire 1 e% prev_stage_result [15] $end
$var wire 1 f% prev_stage_result [14] $end
$var wire 1 g% prev_stage_result [13] $end
$var wire 1 h% prev_stage_result [12] $end
$var wire 1 i% prev_stage_result [11] $end
$var wire 1 j% prev_stage_result [10] $end
$var wire 1 k% prev_stage_result [9] $end
$var wire 1 l% prev_stage_result [8] $end
$var wire 1 m% prev_stage_result [7] $end
$var wire 1 n% prev_stage_result [6] $end
$var wire 1 o% prev_stage_result [5] $end
$var wire 1 p% prev_stage_result [4] $end
$var wire 1 q% prev_stage_result [3] $end
$var wire 1 r% prev_stage_result [2] $end
$var wire 1 s% prev_stage_result [1] $end
$var wire 1 t% prev_stage_result [0] $end
$var wire 1 a# current_x_power [15] $end
$var wire 1 b# current_x_power [14] $end
$var wire 1 c# current_x_power [13] $end
$var wire 1 d# current_x_power [12] $end
$var wire 1 e# current_x_power [11] $end
$var wire 1 f# current_x_power [10] $end
$var wire 1 g# current_x_power [9] $end
$var wire 1 h# current_x_power [8] $end
$var wire 1 i# current_x_power [7] $end
$var wire 1 j# current_x_power [6] $end
$var wire 1 k# current_x_power [5] $end
$var wire 1 l# current_x_power [4] $end
$var wire 1 m# current_x_power [3] $end
$var wire 1 n# current_x_power [2] $end
$var wire 1 o# current_x_power [1] $end
$var wire 1 p# current_x_power [0] $end
$var wire 1 $! current_stage_num [2] $end
$var wire 1 %! current_stage_num [1] $end
$var wire 1 &! current_stage_num [0] $end
$var wire 1 u% current_stage_result [31] $end
$var wire 1 v% current_stage_result [30] $end
$var wire 1 w% current_stage_result [29] $end
$var wire 1 x% current_stage_result [28] $end
$var wire 1 y% current_stage_result [27] $end
$var wire 1 z% current_stage_result [26] $end
$var wire 1 {% current_stage_result [25] $end
$var wire 1 |% current_stage_result [24] $end
$var wire 1 }% current_stage_result [23] $end
$var wire 1 ~% current_stage_result [22] $end
$var wire 1 !& current_stage_result [21] $end
$var wire 1 "& current_stage_result [20] $end
$var wire 1 #& current_stage_result [19] $end
$var wire 1 $& current_stage_result [18] $end
$var wire 1 %& current_stage_result [17] $end
$var wire 1 && current_stage_result [16] $end
$var wire 1 '& current_stage_result [15] $end
$var wire 1 (& current_stage_result [14] $end
$var wire 1 )& current_stage_result [13] $end
$var wire 1 *& current_stage_result [12] $end
$var wire 1 +& current_stage_result [11] $end
$var wire 1 ,& current_stage_result [10] $end
$var wire 1 -& current_stage_result [9] $end
$var wire 1 .& current_stage_result [8] $end
$var wire 1 /& current_stage_result [7] $end
$var wire 1 0& current_stage_result [6] $end
$var wire 1 1& current_stage_result [5] $end
$var wire 1 2& current_stage_result [4] $end
$var wire 1 3& current_stage_result [3] $end
$var wire 1 4& current_stage_result [2] $end
$var wire 1 5& current_stage_result [1] $end
$var wire 1 6& current_stage_result [0] $end
$var wire 1 1# next_x_power [15] $end
$var wire 1 2# next_x_power [14] $end
$var wire 1 3# next_x_power [13] $end
$var wire 1 4# next_x_power [12] $end
$var wire 1 5# next_x_power [11] $end
$var wire 1 6# next_x_power [10] $end
$var wire 1 7# next_x_power [9] $end
$var wire 1 8# next_x_power [8] $end
$var wire 1 9# next_x_power [7] $end
$var wire 1 :# next_x_power [6] $end
$var wire 1 ;# next_x_power [5] $end
$var wire 1 <# next_x_power [4] $end
$var wire 1 =# next_x_power [3] $end
$var wire 1 ># next_x_power [2] $end
$var wire 1 ?# next_x_power [1] $end
$var wire 1 @# next_x_power [0] $end
$var wire 1 y next_stage_num [2] $end
$var wire 1 z next_stage_num [1] $end
$var wire 1 { next_stage_num [0] $end
$var wire 1 ;' overflow $end
$var wire 1 $+ mult_result [15] $end
$var wire 1 %+ mult_result [14] $end
$var wire 1 &+ mult_result [13] $end
$var wire 1 '+ mult_result [12] $end
$var wire 1 (+ mult_result [11] $end
$var wire 1 )+ mult_result [10] $end
$var wire 1 *+ mult_result [9] $end
$var wire 1 ++ mult_result [8] $end
$var wire 1 ,+ mult_result [7] $end
$var wire 1 -+ mult_result [6] $end
$var wire 1 .+ mult_result [5] $end
$var wire 1 /+ mult_result [4] $end
$var wire 1 0+ mult_result [3] $end
$var wire 1 1+ mult_result [2] $end
$var wire 1 2+ mult_result [1] $end
$var wire 1 3+ mult_result [0] $end
$var wire 1 4+ mult_result_sign_extended [31] $end
$var wire 1 5+ mult_result_sign_extended [30] $end
$var wire 1 6+ mult_result_sign_extended [29] $end
$var wire 1 7+ mult_result_sign_extended [28] $end
$var wire 1 8+ mult_result_sign_extended [27] $end
$var wire 1 9+ mult_result_sign_extended [26] $end
$var wire 1 :+ mult_result_sign_extended [25] $end
$var wire 1 ;+ mult_result_sign_extended [24] $end
$var wire 1 <+ mult_result_sign_extended [23] $end
$var wire 1 =+ mult_result_sign_extended [22] $end
$var wire 1 >+ mult_result_sign_extended [21] $end
$var wire 1 ?+ mult_result_sign_extended [20] $end
$var wire 1 @+ mult_result_sign_extended [19] $end
$var wire 1 A+ mult_result_sign_extended [18] $end
$var wire 1 B+ mult_result_sign_extended [17] $end
$var wire 1 C+ mult_result_sign_extended [16] $end
$var wire 1 D+ mult_result_sign_extended [15] $end
$var wire 1 E+ mult_result_sign_extended [14] $end
$var wire 1 F+ mult_result_sign_extended [13] $end
$var wire 1 G+ mult_result_sign_extended [12] $end
$var wire 1 H+ mult_result_sign_extended [11] $end
$var wire 1 I+ mult_result_sign_extended [10] $end
$var wire 1 J+ mult_result_sign_extended [9] $end
$var wire 1 K+ mult_result_sign_extended [8] $end
$var wire 1 L+ mult_result_sign_extended [7] $end
$var wire 1 M+ mult_result_sign_extended [6] $end
$var wire 1 N+ mult_result_sign_extended [5] $end
$var wire 1 O+ mult_result_sign_extended [4] $end
$var wire 1 P+ mult_result_sign_extended [3] $end
$var wire 1 Q+ mult_result_sign_extended [2] $end
$var wire 1 R+ mult_result_sign_extended [1] $end
$var wire 1 S+ mult_result_sign_extended [0] $end

$scope module mult $end
$var wire 1 a# inA [15] $end
$var wire 1 b# inA [14] $end
$var wire 1 c# inA [13] $end
$var wire 1 d# inA [12] $end
$var wire 1 e# inA [11] $end
$var wire 1 f# inA [10] $end
$var wire 1 g# inA [9] $end
$var wire 1 h# inA [8] $end
$var wire 1 i# inA [7] $end
$var wire 1 j# inA [6] $end
$var wire 1 k# inA [5] $end
$var wire 1 l# inA [4] $end
$var wire 1 m# inA [3] $end
$var wire 1 n# inA [2] $end
$var wire 1 o# inA [1] $end
$var wire 1 p# inA [0] $end
$var wire 1 _" inB [15] $end
$var wire 1 `" inB [14] $end
$var wire 1 a" inB [13] $end
$var wire 1 b" inB [12] $end
$var wire 1 c" inB [11] $end
$var wire 1 d" inB [10] $end
$var wire 1 e" inB [9] $end
$var wire 1 f" inB [8] $end
$var wire 1 g" inB [7] $end
$var wire 1 h" inB [6] $end
$var wire 1 i" inB [5] $end
$var wire 1 j" inB [4] $end
$var wire 1 k" inB [3] $end
$var wire 1 l" inB [2] $end
$var wire 1 m" inB [1] $end
$var wire 1 n" inB [0] $end
$var wire 1 1# out [15] $end
$var wire 1 2# out [14] $end
$var wire 1 3# out [13] $end
$var wire 1 4# out [12] $end
$var wire 1 5# out [11] $end
$var wire 1 6# out [10] $end
$var wire 1 7# out [9] $end
$var wire 1 8# out [8] $end
$var wire 1 9# out [7] $end
$var wire 1 :# out [6] $end
$var wire 1 ;# out [5] $end
$var wire 1 <# out [4] $end
$var wire 1 =# out [3] $end
$var wire 1 ># out [2] $end
$var wire 1 ?# out [1] $end
$var wire 1 @# out [0] $end
$var wire 1 T+ mult_result [31] $end
$var wire 1 U+ mult_result [30] $end
$var wire 1 V+ mult_result [29] $end
$var wire 1 W+ mult_result [28] $end
$var wire 1 X+ mult_result [27] $end
$var wire 1 Y+ mult_result [26] $end
$var wire 1 Z+ mult_result [25] $end
$var wire 1 [+ mult_result [24] $end
$var wire 1 \+ mult_result [23] $end
$var wire 1 ]+ mult_result [22] $end
$var wire 1 ^+ mult_result [21] $end
$var wire 1 _+ mult_result [20] $end
$var wire 1 `+ mult_result [19] $end
$var wire 1 a+ mult_result [18] $end
$var wire 1 b+ mult_result [17] $end
$var wire 1 c+ mult_result [16] $end
$var wire 1 d+ mult_result [15] $end
$var wire 1 e+ mult_result [14] $end
$var wire 1 f+ mult_result [13] $end
$var wire 1 g+ mult_result [12] $end
$var wire 1 h+ mult_result [11] $end
$var wire 1 i+ mult_result [10] $end
$var wire 1 j+ mult_result [9] $end
$var wire 1 k+ mult_result [8] $end
$var wire 1 l+ mult_result [7] $end
$var wire 1 m+ mult_result [6] $end
$var wire 1 n+ mult_result [5] $end
$var wire 1 o+ mult_result [4] $end
$var wire 1 p+ mult_result [3] $end
$var wire 1 q+ mult_result [2] $end
$var wire 1 r+ mult_result [1] $end
$var wire 1 s+ mult_result [0] $end
$upscope $end

$scope module mult2 $end
$var wire 1 t+ inA [15] $end
$var wire 1 u+ inA [14] $end
$var wire 1 v+ inA [13] $end
$var wire 1 w+ inA [12] $end
$var wire 1 x+ inA [11] $end
$var wire 1 y+ inA [10] $end
$var wire 1 z+ inA [9] $end
$var wire 1 {+ inA [8] $end
$var wire 1 |+ inA [7] $end
$var wire 1 }+ inA [6] $end
$var wire 1 ~+ inA [5] $end
$var wire 1 !, inA [4] $end
$var wire 1 ", inA [3] $end
$var wire 1 #, inA [2] $end
$var wire 1 $, inA [1] $end
$var wire 1 %, inA [0] $end
$var wire 1 a# inB [15] $end
$var wire 1 b# inB [14] $end
$var wire 1 c# inB [13] $end
$var wire 1 d# inB [12] $end
$var wire 1 e# inB [11] $end
$var wire 1 f# inB [10] $end
$var wire 1 g# inB [9] $end
$var wire 1 h# inB [8] $end
$var wire 1 i# inB [7] $end
$var wire 1 j# inB [6] $end
$var wire 1 k# inB [5] $end
$var wire 1 l# inB [4] $end
$var wire 1 m# inB [3] $end
$var wire 1 n# inB [2] $end
$var wire 1 o# inB [1] $end
$var wire 1 p# inB [0] $end
$var wire 1 $+ out [15] $end
$var wire 1 %+ out [14] $end
$var wire 1 &+ out [13] $end
$var wire 1 '+ out [12] $end
$var wire 1 (+ out [11] $end
$var wire 1 )+ out [10] $end
$var wire 1 *+ out [9] $end
$var wire 1 ++ out [8] $end
$var wire 1 ,+ out [7] $end
$var wire 1 -+ out [6] $end
$var wire 1 .+ out [5] $end
$var wire 1 /+ out [4] $end
$var wire 1 0+ out [3] $end
$var wire 1 1+ out [2] $end
$var wire 1 2+ out [1] $end
$var wire 1 3+ out [0] $end
$var wire 1 &, mult_result [31] $end
$var wire 1 ', mult_result [30] $end
$var wire 1 (, mult_result [29] $end
$var wire 1 ), mult_result [28] $end
$var wire 1 *, mult_result [27] $end
$var wire 1 +, mult_result [26] $end
$var wire 1 ,, mult_result [25] $end
$var wire 1 -, mult_result [24] $end
$var wire 1 ., mult_result [23] $end
$var wire 1 /, mult_result [22] $end
$var wire 1 0, mult_result [21] $end
$var wire 1 1, mult_result [20] $end
$var wire 1 2, mult_result [19] $end
$var wire 1 3, mult_result [18] $end
$var wire 1 4, mult_result [17] $end
$var wire 1 5, mult_result [16] $end
$var wire 1 6, mult_result [15] $end
$var wire 1 7, mult_result [14] $end
$var wire 1 8, mult_result [13] $end
$var wire 1 9, mult_result [12] $end
$var wire 1 :, mult_result [11] $end
$var wire 1 ;, mult_result [10] $end
$var wire 1 <, mult_result [9] $end
$var wire 1 =, mult_result [8] $end
$var wire 1 >, mult_result [7] $end
$var wire 1 ?, mult_result [6] $end
$var wire 1 @, mult_result [5] $end
$var wire 1 A, mult_result [4] $end
$var wire 1 B, mult_result [3] $end
$var wire 1 C, mult_result [2] $end
$var wire 1 D, mult_result [1] $end
$var wire 1 E, mult_result [0] $end
$upscope $end

$scope module overflow_check $end
$var parameter 32 F, N $end
$var wire 1 U% a [31] $end
$var wire 1 V% a [30] $end
$var wire 1 W% a [29] $end
$var wire 1 X% a [28] $end
$var wire 1 Y% a [27] $end
$var wire 1 Z% a [26] $end
$var wire 1 [% a [25] $end
$var wire 1 \% a [24] $end
$var wire 1 ]% a [23] $end
$var wire 1 ^% a [22] $end
$var wire 1 _% a [21] $end
$var wire 1 `% a [20] $end
$var wire 1 a% a [19] $end
$var wire 1 b% a [18] $end
$var wire 1 c% a [17] $end
$var wire 1 d% a [16] $end
$var wire 1 e% a [15] $end
$var wire 1 f% a [14] $end
$var wire 1 g% a [13] $end
$var wire 1 h% a [12] $end
$var wire 1 i% a [11] $end
$var wire 1 j% a [10] $end
$var wire 1 k% a [9] $end
$var wire 1 l% a [8] $end
$var wire 1 m% a [7] $end
$var wire 1 n% a [6] $end
$var wire 1 o% a [5] $end
$var wire 1 p% a [4] $end
$var wire 1 q% a [3] $end
$var wire 1 r% a [2] $end
$var wire 1 s% a [1] $end
$var wire 1 t% a [0] $end
$var wire 1 4+ b [31] $end
$var wire 1 5+ b [30] $end
$var wire 1 6+ b [29] $end
$var wire 1 7+ b [28] $end
$var wire 1 8+ b [27] $end
$var wire 1 9+ b [26] $end
$var wire 1 :+ b [25] $end
$var wire 1 ;+ b [24] $end
$var wire 1 <+ b [23] $end
$var wire 1 =+ b [22] $end
$var wire 1 >+ b [21] $end
$var wire 1 ?+ b [20] $end
$var wire 1 @+ b [19] $end
$var wire 1 A+ b [18] $end
$var wire 1 B+ b [17] $end
$var wire 1 C+ b [16] $end
$var wire 1 D+ b [15] $end
$var wire 1 E+ b [14] $end
$var wire 1 F+ b [13] $end
$var wire 1 G+ b [12] $end
$var wire 1 H+ b [11] $end
$var wire 1 I+ b [10] $end
$var wire 1 J+ b [9] $end
$var wire 1 K+ b [8] $end
$var wire 1 L+ b [7] $end
$var wire 1 M+ b [6] $end
$var wire 1 N+ b [5] $end
$var wire 1 O+ b [4] $end
$var wire 1 P+ b [3] $end
$var wire 1 Q+ b [2] $end
$var wire 1 R+ b [1] $end
$var wire 1 S+ b [0] $end
$var wire 1 u% result [31] $end
$var wire 1 v% result [30] $end
$var wire 1 w% result [29] $end
$var wire 1 x% result [28] $end
$var wire 1 y% result [27] $end
$var wire 1 z% result [26] $end
$var wire 1 {% result [25] $end
$var wire 1 |% result [24] $end
$var wire 1 }% result [23] $end
$var wire 1 ~% result [22] $end
$var wire 1 !& result [21] $end
$var wire 1 "& result [20] $end
$var wire 1 #& result [19] $end
$var wire 1 $& result [18] $end
$var wire 1 %& result [17] $end
$var wire 1 && result [16] $end
$var wire 1 '& result [15] $end
$var wire 1 (& result [14] $end
$var wire 1 )& result [13] $end
$var wire 1 *& result [12] $end
$var wire 1 +& result [11] $end
$var wire 1 ,& result [10] $end
$var wire 1 -& result [9] $end
$var wire 1 .& result [8] $end
$var wire 1 /& result [7] $end
$var wire 1 0& result [6] $end
$var wire 1 1& result [5] $end
$var wire 1 2& result [4] $end
$var wire 1 3& result [3] $end
$var wire 1 4& result [2] $end
$var wire 1 5& result [1] $end
$var wire 1 6& result [0] $end
$var wire 1 =' operation $end
$var wire 1 ;' overflow $end
$var wire 1 G, msb_a $end
$var wire 1 H, msb_b $end
$var wire 1 I, msb_result $end
$var wire 1 J, add_overflow $end
$var wire 1 K, sub_overflow $end
$upscope $end
$upscope $end

$scope module reg_stage23_result $end
$var parameter 32 L, N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 u% in [31] $end
$var wire 1 v% in [30] $end
$var wire 1 w% in [29] $end
$var wire 1 x% in [28] $end
$var wire 1 y% in [27] $end
$var wire 1 z% in [26] $end
$var wire 1 {% in [25] $end
$var wire 1 |% in [24] $end
$var wire 1 }% in [23] $end
$var wire 1 ~% in [22] $end
$var wire 1 !& in [21] $end
$var wire 1 "& in [20] $end
$var wire 1 #& in [19] $end
$var wire 1 $& in [18] $end
$var wire 1 %& in [17] $end
$var wire 1 && in [16] $end
$var wire 1 '& in [15] $end
$var wire 1 (& in [14] $end
$var wire 1 )& in [13] $end
$var wire 1 *& in [12] $end
$var wire 1 +& in [11] $end
$var wire 1 ,& in [10] $end
$var wire 1 -& in [9] $end
$var wire 1 .& in [8] $end
$var wire 1 /& in [7] $end
$var wire 1 0& in [6] $end
$var wire 1 1& in [5] $end
$var wire 1 2& in [4] $end
$var wire 1 3& in [3] $end
$var wire 1 4& in [2] $end
$var wire 1 5& in [1] $end
$var wire 1 6& in [0] $end
$var reg 32 M, out [31:0] $end
$upscope $end

$scope module reg_stage23_x_power $end
$var parameter 32 N, N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 1# in [15] $end
$var wire 1 2# in [14] $end
$var wire 1 3# in [13] $end
$var wire 1 4# in [12] $end
$var wire 1 5# in [11] $end
$var wire 1 6# in [10] $end
$var wire 1 7# in [9] $end
$var wire 1 8# in [8] $end
$var wire 1 9# in [7] $end
$var wire 1 :# in [6] $end
$var wire 1 ;# in [5] $end
$var wire 1 <# in [4] $end
$var wire 1 =# in [3] $end
$var wire 1 ># in [2] $end
$var wire 1 ?# in [1] $end
$var wire 1 @# in [0] $end
$var reg 16 O, out [15:0] $end
$upscope $end

$scope module reg_stage23_num $end
$var parameter 32 P, N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 y in [2] $end
$var wire 1 z in [1] $end
$var wire 1 { in [0] $end
$var reg 3 Q, out [2:0] $end
$upscope $end

$scope module stage3 $end
$var wire 1 L clk $end
$var wire 1 m N_input [2] $end
$var wire 1 n N_input [1] $end
$var wire 1 o N_input [0] $end
$var wire 1 _" X_input [15] $end
$var wire 1 `" X_input [14] $end
$var wire 1 a" X_input [13] $end
$var wire 1 b" X_input [12] $end
$var wire 1 c" X_input [11] $end
$var wire 1 d" X_input [10] $end
$var wire 1 e" X_input [9] $end
$var wire 1 f" X_input [8] $end
$var wire 1 g" X_input [7] $end
$var wire 1 h" X_input [6] $end
$var wire 1 i" X_input [5] $end
$var wire 1 j" X_input [4] $end
$var wire 1 k" X_input [3] $end
$var wire 1 l" X_input [2] $end
$var wire 1 m" X_input [1] $end
$var wire 1 n" X_input [0] $end
$var wire 1 -! memory [127] $end
$var wire 1 .! memory [126] $end
$var wire 1 /! memory [125] $end
$var wire 1 0! memory [124] $end
$var wire 1 1! memory [123] $end
$var wire 1 2! memory [122] $end
$var wire 1 3! memory [121] $end
$var wire 1 4! memory [120] $end
$var wire 1 5! memory [119] $end
$var wire 1 6! memory [118] $end
$var wire 1 7! memory [117] $end
$var wire 1 8! memory [116] $end
$var wire 1 9! memory [115] $end
$var wire 1 :! memory [114] $end
$var wire 1 ;! memory [113] $end
$var wire 1 <! memory [112] $end
$var wire 1 =! memory [111] $end
$var wire 1 >! memory [110] $end
$var wire 1 ?! memory [109] $end
$var wire 1 @! memory [108] $end
$var wire 1 A! memory [107] $end
$var wire 1 B! memory [106] $end
$var wire 1 C! memory [105] $end
$var wire 1 D! memory [104] $end
$var wire 1 E! memory [103] $end
$var wire 1 F! memory [102] $end
$var wire 1 G! memory [101] $end
$var wire 1 H! memory [100] $end
$var wire 1 I! memory [99] $end
$var wire 1 J! memory [98] $end
$var wire 1 K! memory [97] $end
$var wire 1 L! memory [96] $end
$var wire 1 M! memory [95] $end
$var wire 1 N! memory [94] $end
$var wire 1 O! memory [93] $end
$var wire 1 P! memory [92] $end
$var wire 1 Q! memory [91] $end
$var wire 1 R! memory [90] $end
$var wire 1 S! memory [89] $end
$var wire 1 T! memory [88] $end
$var wire 1 U! memory [87] $end
$var wire 1 V! memory [86] $end
$var wire 1 W! memory [85] $end
$var wire 1 X! memory [84] $end
$var wire 1 Y! memory [83] $end
$var wire 1 Z! memory [82] $end
$var wire 1 [! memory [81] $end
$var wire 1 \! memory [80] $end
$var wire 1 ]! memory [79] $end
$var wire 1 ^! memory [78] $end
$var wire 1 _! memory [77] $end
$var wire 1 `! memory [76] $end
$var wire 1 a! memory [75] $end
$var wire 1 b! memory [74] $end
$var wire 1 c! memory [73] $end
$var wire 1 d! memory [72] $end
$var wire 1 e! memory [71] $end
$var wire 1 f! memory [70] $end
$var wire 1 g! memory [69] $end
$var wire 1 h! memory [68] $end
$var wire 1 i! memory [67] $end
$var wire 1 j! memory [66] $end
$var wire 1 k! memory [65] $end
$var wire 1 l! memory [64] $end
$var wire 1 m! memory [63] $end
$var wire 1 n! memory [62] $end
$var wire 1 o! memory [61] $end
$var wire 1 p! memory [60] $end
$var wire 1 q! memory [59] $end
$var wire 1 r! memory [58] $end
$var wire 1 s! memory [57] $end
$var wire 1 t! memory [56] $end
$var wire 1 u! memory [55] $end
$var wire 1 v! memory [54] $end
$var wire 1 w! memory [53] $end
$var wire 1 x! memory [52] $end
$var wire 1 y! memory [51] $end
$var wire 1 z! memory [50] $end
$var wire 1 {! memory [49] $end
$var wire 1 |! memory [48] $end
$var wire 1 }! memory [47] $end
$var wire 1 ~! memory [46] $end
$var wire 1 !" memory [45] $end
$var wire 1 "" memory [44] $end
$var wire 1 #" memory [43] $end
$var wire 1 $" memory [42] $end
$var wire 1 %" memory [41] $end
$var wire 1 &" memory [40] $end
$var wire 1 '" memory [39] $end
$var wire 1 (" memory [38] $end
$var wire 1 )" memory [37] $end
$var wire 1 *" memory [36] $end
$var wire 1 +" memory [35] $end
$var wire 1 ," memory [34] $end
$var wire 1 -" memory [33] $end
$var wire 1 ." memory [32] $end
$var wire 1 /" memory [31] $end
$var wire 1 0" memory [30] $end
$var wire 1 1" memory [29] $end
$var wire 1 2" memory [28] $end
$var wire 1 3" memory [27] $end
$var wire 1 4" memory [26] $end
$var wire 1 5" memory [25] $end
$var wire 1 6" memory [24] $end
$var wire 1 7" memory [23] $end
$var wire 1 8" memory [22] $end
$var wire 1 9" memory [21] $end
$var wire 1 :" memory [20] $end
$var wire 1 ;" memory [19] $end
$var wire 1 <" memory [18] $end
$var wire 1 =" memory [17] $end
$var wire 1 >" memory [16] $end
$var wire 1 ?" memory [15] $end
$var wire 1 @" memory [14] $end
$var wire 1 A" memory [13] $end
$var wire 1 B" memory [12] $end
$var wire 1 C" memory [11] $end
$var wire 1 D" memory [10] $end
$var wire 1 E" memory [9] $end
$var wire 1 F" memory [8] $end
$var wire 1 G" memory [7] $end
$var wire 1 H" memory [6] $end
$var wire 1 I" memory [5] $end
$var wire 1 J" memory [4] $end
$var wire 1 K" memory [3] $end
$var wire 1 L" memory [2] $end
$var wire 1 M" memory [1] $end
$var wire 1 N" memory [0] $end
$var wire 1 >' stage_sign $end
$var wire 1 7& prev_stage_result [31] $end
$var wire 1 8& prev_stage_result [30] $end
$var wire 1 9& prev_stage_result [29] $end
$var wire 1 :& prev_stage_result [28] $end
$var wire 1 ;& prev_stage_result [27] $end
$var wire 1 <& prev_stage_result [26] $end
$var wire 1 =& prev_stage_result [25] $end
$var wire 1 >& prev_stage_result [24] $end
$var wire 1 ?& prev_stage_result [23] $end
$var wire 1 @& prev_stage_result [22] $end
$var wire 1 A& prev_stage_result [21] $end
$var wire 1 B& prev_stage_result [20] $end
$var wire 1 C& prev_stage_result [19] $end
$var wire 1 D& prev_stage_result [18] $end
$var wire 1 E& prev_stage_result [17] $end
$var wire 1 F& prev_stage_result [16] $end
$var wire 1 G& prev_stage_result [15] $end
$var wire 1 H& prev_stage_result [14] $end
$var wire 1 I& prev_stage_result [13] $end
$var wire 1 J& prev_stage_result [12] $end
$var wire 1 K& prev_stage_result [11] $end
$var wire 1 L& prev_stage_result [10] $end
$var wire 1 M& prev_stage_result [9] $end
$var wire 1 N& prev_stage_result [8] $end
$var wire 1 O& prev_stage_result [7] $end
$var wire 1 P& prev_stage_result [6] $end
$var wire 1 Q& prev_stage_result [5] $end
$var wire 1 R& prev_stage_result [4] $end
$var wire 1 S& prev_stage_result [3] $end
$var wire 1 T& prev_stage_result [2] $end
$var wire 1 U& prev_stage_result [1] $end
$var wire 1 V& prev_stage_result [0] $end
$var wire 1 q# current_x_power [15] $end
$var wire 1 r# current_x_power [14] $end
$var wire 1 s# current_x_power [13] $end
$var wire 1 t# current_x_power [12] $end
$var wire 1 u# current_x_power [11] $end
$var wire 1 v# current_x_power [10] $end
$var wire 1 w# current_x_power [9] $end
$var wire 1 x# current_x_power [8] $end
$var wire 1 y# current_x_power [7] $end
$var wire 1 z# current_x_power [6] $end
$var wire 1 {# current_x_power [5] $end
$var wire 1 |# current_x_power [4] $end
$var wire 1 }# current_x_power [3] $end
$var wire 1 ~# current_x_power [2] $end
$var wire 1 !$ current_x_power [1] $end
$var wire 1 "$ current_x_power [0] $end
$var wire 1 '! current_stage_num [2] $end
$var wire 1 (! current_stage_num [1] $end
$var wire 1 )! current_stage_num [0] $end
$var wire 1 W& current_stage_result [31] $end
$var wire 1 X& current_stage_result [30] $end
$var wire 1 Y& current_stage_result [29] $end
$var wire 1 Z& current_stage_result [28] $end
$var wire 1 [& current_stage_result [27] $end
$var wire 1 \& current_stage_result [26] $end
$var wire 1 ]& current_stage_result [25] $end
$var wire 1 ^& current_stage_result [24] $end
$var wire 1 _& current_stage_result [23] $end
$var wire 1 `& current_stage_result [22] $end
$var wire 1 a& current_stage_result [21] $end
$var wire 1 b& current_stage_result [20] $end
$var wire 1 c& current_stage_result [19] $end
$var wire 1 d& current_stage_result [18] $end
$var wire 1 e& current_stage_result [17] $end
$var wire 1 f& current_stage_result [16] $end
$var wire 1 g& current_stage_result [15] $end
$var wire 1 h& current_stage_result [14] $end
$var wire 1 i& current_stage_result [13] $end
$var wire 1 j& current_stage_result [12] $end
$var wire 1 k& current_stage_result [11] $end
$var wire 1 l& current_stage_result [10] $end
$var wire 1 m& current_stage_result [9] $end
$var wire 1 n& current_stage_result [8] $end
$var wire 1 o& current_stage_result [7] $end
$var wire 1 p& current_stage_result [6] $end
$var wire 1 q& current_stage_result [5] $end
$var wire 1 r& current_stage_result [4] $end
$var wire 1 s& current_stage_result [3] $end
$var wire 1 t& current_stage_result [2] $end
$var wire 1 u& current_stage_result [1] $end
$var wire 1 v& current_stage_result [0] $end
$var wire 1 A# next_x_power [15] $end
$var wire 1 B# next_x_power [14] $end
$var wire 1 C# next_x_power [13] $end
$var wire 1 D# next_x_power [12] $end
$var wire 1 E# next_x_power [11] $end
$var wire 1 F# next_x_power [10] $end
$var wire 1 G# next_x_power [9] $end
$var wire 1 H# next_x_power [8] $end
$var wire 1 I# next_x_power [7] $end
$var wire 1 J# next_x_power [6] $end
$var wire 1 K# next_x_power [5] $end
$var wire 1 L# next_x_power [4] $end
$var wire 1 M# next_x_power [3] $end
$var wire 1 N# next_x_power [2] $end
$var wire 1 O# next_x_power [1] $end
$var wire 1 P# next_x_power [0] $end
$var wire 1 | next_stage_num [2] $end
$var wire 1 } next_stage_num [1] $end
$var wire 1 ~ next_stage_num [0] $end
$var wire 1 <' overflow $end
$var wire 1 R, mult_result [15] $end
$var wire 1 S, mult_result [14] $end
$var wire 1 T, mult_result [13] $end
$var wire 1 U, mult_result [12] $end
$var wire 1 V, mult_result [11] $end
$var wire 1 W, mult_result [10] $end
$var wire 1 X, mult_result [9] $end
$var wire 1 Y, mult_result [8] $end
$var wire 1 Z, mult_result [7] $end
$var wire 1 [, mult_result [6] $end
$var wire 1 \, mult_result [5] $end
$var wire 1 ], mult_result [4] $end
$var wire 1 ^, mult_result [3] $end
$var wire 1 _, mult_result [2] $end
$var wire 1 `, mult_result [1] $end
$var wire 1 a, mult_result [0] $end
$var wire 1 b, mult_result_sign_extended [31] $end
$var wire 1 c, mult_result_sign_extended [30] $end
$var wire 1 d, mult_result_sign_extended [29] $end
$var wire 1 e, mult_result_sign_extended [28] $end
$var wire 1 f, mult_result_sign_extended [27] $end
$var wire 1 g, mult_result_sign_extended [26] $end
$var wire 1 h, mult_result_sign_extended [25] $end
$var wire 1 i, mult_result_sign_extended [24] $end
$var wire 1 j, mult_result_sign_extended [23] $end
$var wire 1 k, mult_result_sign_extended [22] $end
$var wire 1 l, mult_result_sign_extended [21] $end
$var wire 1 m, mult_result_sign_extended [20] $end
$var wire 1 n, mult_result_sign_extended [19] $end
$var wire 1 o, mult_result_sign_extended [18] $end
$var wire 1 p, mult_result_sign_extended [17] $end
$var wire 1 q, mult_result_sign_extended [16] $end
$var wire 1 r, mult_result_sign_extended [15] $end
$var wire 1 s, mult_result_sign_extended [14] $end
$var wire 1 t, mult_result_sign_extended [13] $end
$var wire 1 u, mult_result_sign_extended [12] $end
$var wire 1 v, mult_result_sign_extended [11] $end
$var wire 1 w, mult_result_sign_extended [10] $end
$var wire 1 x, mult_result_sign_extended [9] $end
$var wire 1 y, mult_result_sign_extended [8] $end
$var wire 1 z, mult_result_sign_extended [7] $end
$var wire 1 {, mult_result_sign_extended [6] $end
$var wire 1 |, mult_result_sign_extended [5] $end
$var wire 1 }, mult_result_sign_extended [4] $end
$var wire 1 ~, mult_result_sign_extended [3] $end
$var wire 1 !- mult_result_sign_extended [2] $end
$var wire 1 "- mult_result_sign_extended [1] $end
$var wire 1 #- mult_result_sign_extended [0] $end

$scope module mult $end
$var wire 1 q# inA [15] $end
$var wire 1 r# inA [14] $end
$var wire 1 s# inA [13] $end
$var wire 1 t# inA [12] $end
$var wire 1 u# inA [11] $end
$var wire 1 v# inA [10] $end
$var wire 1 w# inA [9] $end
$var wire 1 x# inA [8] $end
$var wire 1 y# inA [7] $end
$var wire 1 z# inA [6] $end
$var wire 1 {# inA [5] $end
$var wire 1 |# inA [4] $end
$var wire 1 }# inA [3] $end
$var wire 1 ~# inA [2] $end
$var wire 1 !$ inA [1] $end
$var wire 1 "$ inA [0] $end
$var wire 1 _" inB [15] $end
$var wire 1 `" inB [14] $end
$var wire 1 a" inB [13] $end
$var wire 1 b" inB [12] $end
$var wire 1 c" inB [11] $end
$var wire 1 d" inB [10] $end
$var wire 1 e" inB [9] $end
$var wire 1 f" inB [8] $end
$var wire 1 g" inB [7] $end
$var wire 1 h" inB [6] $end
$var wire 1 i" inB [5] $end
$var wire 1 j" inB [4] $end
$var wire 1 k" inB [3] $end
$var wire 1 l" inB [2] $end
$var wire 1 m" inB [1] $end
$var wire 1 n" inB [0] $end
$var wire 1 A# out [15] $end
$var wire 1 B# out [14] $end
$var wire 1 C# out [13] $end
$var wire 1 D# out [12] $end
$var wire 1 E# out [11] $end
$var wire 1 F# out [10] $end
$var wire 1 G# out [9] $end
$var wire 1 H# out [8] $end
$var wire 1 I# out [7] $end
$var wire 1 J# out [6] $end
$var wire 1 K# out [5] $end
$var wire 1 L# out [4] $end
$var wire 1 M# out [3] $end
$var wire 1 N# out [2] $end
$var wire 1 O# out [1] $end
$var wire 1 P# out [0] $end
$var wire 1 $- mult_result [31] $end
$var wire 1 %- mult_result [30] $end
$var wire 1 &- mult_result [29] $end
$var wire 1 '- mult_result [28] $end
$var wire 1 (- mult_result [27] $end
$var wire 1 )- mult_result [26] $end
$var wire 1 *- mult_result [25] $end
$var wire 1 +- mult_result [24] $end
$var wire 1 ,- mult_result [23] $end
$var wire 1 -- mult_result [22] $end
$var wire 1 .- mult_result [21] $end
$var wire 1 /- mult_result [20] $end
$var wire 1 0- mult_result [19] $end
$var wire 1 1- mult_result [18] $end
$var wire 1 2- mult_result [17] $end
$var wire 1 3- mult_result [16] $end
$var wire 1 4- mult_result [15] $end
$var wire 1 5- mult_result [14] $end
$var wire 1 6- mult_result [13] $end
$var wire 1 7- mult_result [12] $end
$var wire 1 8- mult_result [11] $end
$var wire 1 9- mult_result [10] $end
$var wire 1 :- mult_result [9] $end
$var wire 1 ;- mult_result [8] $end
$var wire 1 <- mult_result [7] $end
$var wire 1 =- mult_result [6] $end
$var wire 1 >- mult_result [5] $end
$var wire 1 ?- mult_result [4] $end
$var wire 1 @- mult_result [3] $end
$var wire 1 A- mult_result [2] $end
$var wire 1 B- mult_result [1] $end
$var wire 1 C- mult_result [0] $end
$upscope $end

$scope module mult2 $end
$var wire 1 D- inA [15] $end
$var wire 1 E- inA [14] $end
$var wire 1 F- inA [13] $end
$var wire 1 G- inA [12] $end
$var wire 1 H- inA [11] $end
$var wire 1 I- inA [10] $end
$var wire 1 J- inA [9] $end
$var wire 1 K- inA [8] $end
$var wire 1 L- inA [7] $end
$var wire 1 M- inA [6] $end
$var wire 1 N- inA [5] $end
$var wire 1 O- inA [4] $end
$var wire 1 P- inA [3] $end
$var wire 1 Q- inA [2] $end
$var wire 1 R- inA [1] $end
$var wire 1 S- inA [0] $end
$var wire 1 q# inB [15] $end
$var wire 1 r# inB [14] $end
$var wire 1 s# inB [13] $end
$var wire 1 t# inB [12] $end
$var wire 1 u# inB [11] $end
$var wire 1 v# inB [10] $end
$var wire 1 w# inB [9] $end
$var wire 1 x# inB [8] $end
$var wire 1 y# inB [7] $end
$var wire 1 z# inB [6] $end
$var wire 1 {# inB [5] $end
$var wire 1 |# inB [4] $end
$var wire 1 }# inB [3] $end
$var wire 1 ~# inB [2] $end
$var wire 1 !$ inB [1] $end
$var wire 1 "$ inB [0] $end
$var wire 1 R, out [15] $end
$var wire 1 S, out [14] $end
$var wire 1 T, out [13] $end
$var wire 1 U, out [12] $end
$var wire 1 V, out [11] $end
$var wire 1 W, out [10] $end
$var wire 1 X, out [9] $end
$var wire 1 Y, out [8] $end
$var wire 1 Z, out [7] $end
$var wire 1 [, out [6] $end
$var wire 1 \, out [5] $end
$var wire 1 ], out [4] $end
$var wire 1 ^, out [3] $end
$var wire 1 _, out [2] $end
$var wire 1 `, out [1] $end
$var wire 1 a, out [0] $end
$var wire 1 T- mult_result [31] $end
$var wire 1 U- mult_result [30] $end
$var wire 1 V- mult_result [29] $end
$var wire 1 W- mult_result [28] $end
$var wire 1 X- mult_result [27] $end
$var wire 1 Y- mult_result [26] $end
$var wire 1 Z- mult_result [25] $end
$var wire 1 [- mult_result [24] $end
$var wire 1 \- mult_result [23] $end
$var wire 1 ]- mult_result [22] $end
$var wire 1 ^- mult_result [21] $end
$var wire 1 _- mult_result [20] $end
$var wire 1 `- mult_result [19] $end
$var wire 1 a- mult_result [18] $end
$var wire 1 b- mult_result [17] $end
$var wire 1 c- mult_result [16] $end
$var wire 1 d- mult_result [15] $end
$var wire 1 e- mult_result [14] $end
$var wire 1 f- mult_result [13] $end
$var wire 1 g- mult_result [12] $end
$var wire 1 h- mult_result [11] $end
$var wire 1 i- mult_result [10] $end
$var wire 1 j- mult_result [9] $end
$var wire 1 k- mult_result [8] $end
$var wire 1 l- mult_result [7] $end
$var wire 1 m- mult_result [6] $end
$var wire 1 n- mult_result [5] $end
$var wire 1 o- mult_result [4] $end
$var wire 1 p- mult_result [3] $end
$var wire 1 q- mult_result [2] $end
$var wire 1 r- mult_result [1] $end
$var wire 1 s- mult_result [0] $end
$upscope $end

$scope module overflow_check $end
$var parameter 32 t- N $end
$var wire 1 7& a [31] $end
$var wire 1 8& a [30] $end
$var wire 1 9& a [29] $end
$var wire 1 :& a [28] $end
$var wire 1 ;& a [27] $end
$var wire 1 <& a [26] $end
$var wire 1 =& a [25] $end
$var wire 1 >& a [24] $end
$var wire 1 ?& a [23] $end
$var wire 1 @& a [22] $end
$var wire 1 A& a [21] $end
$var wire 1 B& a [20] $end
$var wire 1 C& a [19] $end
$var wire 1 D& a [18] $end
$var wire 1 E& a [17] $end
$var wire 1 F& a [16] $end
$var wire 1 G& a [15] $end
$var wire 1 H& a [14] $end
$var wire 1 I& a [13] $end
$var wire 1 J& a [12] $end
$var wire 1 K& a [11] $end
$var wire 1 L& a [10] $end
$var wire 1 M& a [9] $end
$var wire 1 N& a [8] $end
$var wire 1 O& a [7] $end
$var wire 1 P& a [6] $end
$var wire 1 Q& a [5] $end
$var wire 1 R& a [4] $end
$var wire 1 S& a [3] $end
$var wire 1 T& a [2] $end
$var wire 1 U& a [1] $end
$var wire 1 V& a [0] $end
$var wire 1 b, b [31] $end
$var wire 1 c, b [30] $end
$var wire 1 d, b [29] $end
$var wire 1 e, b [28] $end
$var wire 1 f, b [27] $end
$var wire 1 g, b [26] $end
$var wire 1 h, b [25] $end
$var wire 1 i, b [24] $end
$var wire 1 j, b [23] $end
$var wire 1 k, b [22] $end
$var wire 1 l, b [21] $end
$var wire 1 m, b [20] $end
$var wire 1 n, b [19] $end
$var wire 1 o, b [18] $end
$var wire 1 p, b [17] $end
$var wire 1 q, b [16] $end
$var wire 1 r, b [15] $end
$var wire 1 s, b [14] $end
$var wire 1 t, b [13] $end
$var wire 1 u, b [12] $end
$var wire 1 v, b [11] $end
$var wire 1 w, b [10] $end
$var wire 1 x, b [9] $end
$var wire 1 y, b [8] $end
$var wire 1 z, b [7] $end
$var wire 1 {, b [6] $end
$var wire 1 |, b [5] $end
$var wire 1 }, b [4] $end
$var wire 1 ~, b [3] $end
$var wire 1 !- b [2] $end
$var wire 1 "- b [1] $end
$var wire 1 #- b [0] $end
$var wire 1 W& result [31] $end
$var wire 1 X& result [30] $end
$var wire 1 Y& result [29] $end
$var wire 1 Z& result [28] $end
$var wire 1 [& result [27] $end
$var wire 1 \& result [26] $end
$var wire 1 ]& result [25] $end
$var wire 1 ^& result [24] $end
$var wire 1 _& result [23] $end
$var wire 1 `& result [22] $end
$var wire 1 a& result [21] $end
$var wire 1 b& result [20] $end
$var wire 1 c& result [19] $end
$var wire 1 d& result [18] $end
$var wire 1 e& result [17] $end
$var wire 1 f& result [16] $end
$var wire 1 g& result [15] $end
$var wire 1 h& result [14] $end
$var wire 1 i& result [13] $end
$var wire 1 j& result [12] $end
$var wire 1 k& result [11] $end
$var wire 1 l& result [10] $end
$var wire 1 m& result [9] $end
$var wire 1 n& result [8] $end
$var wire 1 o& result [7] $end
$var wire 1 p& result [6] $end
$var wire 1 q& result [5] $end
$var wire 1 r& result [4] $end
$var wire 1 s& result [3] $end
$var wire 1 t& result [2] $end
$var wire 1 u& result [1] $end
$var wire 1 v& result [0] $end
$var wire 1 >' operation $end
$var wire 1 <' overflow $end
$var wire 1 u- msb_a $end
$var wire 1 v- msb_b $end
$var wire 1 w- msb_result $end
$var wire 1 x- add_overflow $end
$var wire 1 y- sub_overflow $end
$upscope $end
$upscope $end

$scope module reg_stage30_result $end
$var parameter 32 z- N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 W& in [31] $end
$var wire 1 X& in [30] $end
$var wire 1 Y& in [29] $end
$var wire 1 Z& in [28] $end
$var wire 1 [& in [27] $end
$var wire 1 \& in [26] $end
$var wire 1 ]& in [25] $end
$var wire 1 ^& in [24] $end
$var wire 1 _& in [23] $end
$var wire 1 `& in [22] $end
$var wire 1 a& in [21] $end
$var wire 1 b& in [20] $end
$var wire 1 c& in [19] $end
$var wire 1 d& in [18] $end
$var wire 1 e& in [17] $end
$var wire 1 f& in [16] $end
$var wire 1 g& in [15] $end
$var wire 1 h& in [14] $end
$var wire 1 i& in [13] $end
$var wire 1 j& in [12] $end
$var wire 1 k& in [11] $end
$var wire 1 l& in [10] $end
$var wire 1 m& in [9] $end
$var wire 1 n& in [8] $end
$var wire 1 o& in [7] $end
$var wire 1 p& in [6] $end
$var wire 1 q& in [5] $end
$var wire 1 r& in [4] $end
$var wire 1 s& in [3] $end
$var wire 1 t& in [2] $end
$var wire 1 u& in [1] $end
$var wire 1 v& in [0] $end
$var reg 32 {- out [31:0] $end
$upscope $end

$scope module reg_stage30_x_power $end
$var parameter 32 |- N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 A# in [15] $end
$var wire 1 B# in [14] $end
$var wire 1 C# in [13] $end
$var wire 1 D# in [12] $end
$var wire 1 E# in [11] $end
$var wire 1 F# in [10] $end
$var wire 1 G# in [9] $end
$var wire 1 H# in [8] $end
$var wire 1 I# in [7] $end
$var wire 1 J# in [6] $end
$var wire 1 K# in [5] $end
$var wire 1 L# in [4] $end
$var wire 1 M# in [3] $end
$var wire 1 N# in [2] $end
$var wire 1 O# in [1] $end
$var wire 1 P# in [0] $end
$var reg 16 }- out [15:0] $end
$upscope $end

$scope module reg_stage30_num $end
$var parameter 32 ~- N $end
$var wire 1 L clk $end
$var wire 1 M rst $end
$var wire 1 \ ld $end
$var wire 1 | in [2] $end
$var wire 1 } in [1] $end
$var wire 1 ~ in [0] $end
$var reg 3 !. out [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
bx #
bx $
0%
0a
b0 b
b0 c
b0 d
b100000000000000001010101011101100100000000000000001100110011010000101010100010100010010010010010001000000000000 !(
bx #(
bx %(
bx O)
bx Q)
bx S)
bx }*
bx !+
bx #+
bx M,
bx O,
bx Q,
bx {-
bx }-
bx !.
b100000 K
b0 ]
b1 ^
b10 _
b11 `
b1000 "(
b11 $(
b100000 H)
b100000 N)
b10000 P)
b11 R)
b100000 v*
b100000 |*
b10000 ~*
b11 "+
b100000 F,
b100000 L,
b10000 N,
b11 P,
b100000 t-
b100000 z-
b10000 |-
b11 ~-
b10000000000000000000000000000011 J
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0F
xG
1H
1I
0Z
0[
0\
xl
xk
xj
xi
xh
xg
xf
xe
xo
xn
xm
0r
0q
0p
1u
0t
0s
xx
xw
xv
x{
xz
xy
x~
x}
x|
x#!
x"!
x!!
x&!
x%!
x$!
x)!
x(!
x'!
x,!
x+!
x*!
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
1B"
0A"
0@"
0?"
1>"
0="
0<"
1;"
0:"
09"
18"
07"
06"
15"
04"
03"
12"
01"
00"
0/"
1."
0-"
1,"
0+"
0*"
0)"
1("
0'"
1&"
0%"
1$"
0#"
1""
0!"
0~!
0}!
0|!
1{!
0z!
1y!
1x!
0w!
0v!
1u!
1t!
0s!
0r!
1q!
1p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
1_!
0^!
0]!
1\!
1[!
0Z!
1Y!
1X!
1W!
0V!
1U!
0T!
1S!
0R!
1Q!
0P!
1O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
1>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xU%
x6&
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
x8'
x7'
x6'
x5'
x4'
x3'
x2'
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xx&
xw&
x9'
x:'
x;'
x<'
0='
1>'
z^'
z]'
z\'
z['
zZ'
zY'
zX'
zW'
zV'
zU'
zT'
zS'
zR'
zQ'
zP'
zO'
zN'
zM'
zL'
zK'
zJ'
zI'
zH'
zG'
zF'
zE'
zD'
zC'
zB'
zA'
z@'
z?'
z~'
z}'
z|'
z{'
zz'
zy'
zx'
zw'
zv'
zu'
zt'
zs'
zr'
zq'
zp'
zo'
zn'
zm'
zl'
zk'
zj'
zi'
zh'
zg'
zf'
ze'
zd'
zc'
zb'
za'
z`'
z_'
05(
04(
03(
02(
01(
00(
0/(
0.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
0U(
0T(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
xu(
xt(
xs(
xr(
xq(
xp(
xo(
xn(
xm(
xl(
xk(
xj(
xi(
xh(
xg(
xf(
xe(
xd(
xc(
xb(
xa(
x`(
x_(
x^(
x](
x\(
x[(
xZ(
xY(
xX(
xW(
xV(
xG)
xF)
xE)
xD)
xC)
xB)
xA)
x@)
x?)
x>)
x=)
x<)
x;)
x:)
x9)
x8)
x7)
x6)
x5)
x4)
x3)
x2)
x1)
x0)
x/)
x.)
x-)
x,)
x+)
x*)
x))
x()
0I)
xJ)
xK)
xL)
xM)
xc)
xb)
xa)
x`)
x_)
x^)
x])
x\)
x[)
xZ)
xY)
xX)
xW)
xV)
xU)
xT)
0%*
0$*
0#*
0"*
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0v)
0u)
0t)
xs)
xr)
xq)
xp)
xo)
xn)
xm)
xl)
xk)
xj)
xi)
xh)
xg)
xf)
xe)
xd)
xE*
xD*
xC*
xB*
xA*
x@*
x?*
x>*
x=*
x<*
x;*
x:*
x9*
x8*
x7*
x6*
x5*
x4*
x3*
x2*
x1*
x0*
x/*
x.*
x-*
x,*
x+*
x**
x)*
x(*
x'*
x&*
xu*
xt*
xs*
xr*
xq*
xp*
xo*
xn*
xm*
xl*
xk*
xj*
xi*
xh*
xg*
xf*
xe*
xd*
xc*
xb*
xa*
x`*
x_*
x^*
x]*
x\*
x[*
xZ*
xY*
xX*
xW*
xV*
xw*
xx*
xy*
xz*
x{*
x3+
x2+
x1+
x0+
x/+
x.+
x-+
x,+
x++
x*+
x)+
x(+
x'+
x&+
x%+
x$+
0S+
0R+
0Q+
0P+
0O+
0N+
0M+
0L+
0K+
0J+
0I+
0H+
0G+
0F+
0E+
0D+
xC+
xB+
xA+
x@+
x?+
x>+
x=+
x<+
x;+
x:+
x9+
x8+
x7+
x6+
x5+
x4+
xs+
xr+
xq+
xp+
xo+
xn+
xm+
xl+
xk+
xj+
xi+
xh+
xg+
xf+
xe+
xd+
xc+
xb+
xa+
x`+
x_+
x^+
x]+
x\+
x[+
xZ+
xY+
xX+
xW+
xV+
xU+
xT+
xE,
xD,
xC,
xB,
xA,
x@,
x?,
x>,
x=,
x<,
x;,
x:,
x9,
x8,
x7,
x6,
x5,
x4,
x3,
x2,
x1,
x0,
x/,
x.,
x-,
x,,
x+,
x*,
x),
x(,
x',
x&,
xG,
xH,
xI,
xJ,
xK,
xa,
x`,
x_,
x^,
x],
x\,
x[,
xZ,
xY,
xX,
xW,
xV,
xU,
xT,
xS,
xR,
0#-
0"-
0!-
0~,
0},
0|,
0{,
0z,
0y,
0x,
0w,
0v,
0u,
0t,
0s,
0r,
xq,
xp,
xo,
xn,
xm,
xl,
xk,
xj,
xi,
xh,
xg,
xf,
xe,
xd,
xc,
xb,
xC-
xB-
xA-
x@-
x?-
x>-
x=-
x<-
x;-
x:-
x9-
x8-
x7-
x6-
x5-
x4-
x3-
x2-
x1-
x0-
x/-
x.-
x--
x,-
x+-
x*-
x)-
x(-
x'-
x&-
x%-
x$-
xs-
xr-
xq-
xp-
xo-
xn-
xm-
xl-
xk-
xj-
xi-
xh-
xg-
xf-
xe-
xd-
xc-
xb-
xa-
x`-
x_-
x^-
x]-
x\-
x[-
xZ-
xY-
xX-
xW-
xV-
xU-
xT-
xu-
xv-
xw-
xx-
xy-
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
0N
1M
0L
0')
0&)
0%)
0$)
0#)
0")
0!)
0~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
xU*
xT*
xS*
xR*
xQ*
xP*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
xF*
x%,
x$,
x#,
x",
x!,
x~+
x}+
x|+
x{+
xz+
xy+
xx+
xw+
xv+
xu+
xt+
xS-
xR-
xQ-
xP-
xO-
xN-
xM-
xL-
xK-
xJ-
xI-
xH-
xG-
xF-
xE-
xD-
$end
#5
1!
1L
b0 #(
b0 %(
b0 O)
b0 Q)
b0 S)
b0 }*
b0 !+
b0 #+
b0 M,
b0 O,
b0 Q,
b0 {-
b0 }-
b0 !.
0,!
0+!
0*!
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
08'
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0)!
0(!
0'!
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
0&!
0%!
0$!
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0#!
0"!
0!!
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0w*
0G,
0u-
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0U*
0T*
0S*
0R*
0Q*
0P*
0O*
0N*
0M*
0L*
0K*
0J*
0I*
0H*
0G*
0F*
1x
0w
0v
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
0%,
0$,
0#,
0",
0!,
0~+
0}+
0|+
0{+
0z+
0y+
0x+
0w+
0v+
0u+
0t+
1{
0z
0y
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0S-
0R-
0Q-
0P-
0O-
0N-
0M-
0L-
0K-
0J-
0I-
0H-
0G-
0F-
0E-
0D-
1~
0}
0|
0s-
0r-
0q-
0p-
0o-
0n-
0m-
0l-
0k-
0j-
0i-
0h-
0g-
0f-
0e-
0d-
0c-
0b-
0a-
0`-
0_-
0^-
0]-
0\-
0[-
0Z-
0Y-
0X-
0W-
0V-
0U-
0T-
0a,
0`,
0_,
0^,
0],
0\,
0[,
0Z,
0Y,
0X,
0W,
0V,
0U,
0T,
0S,
0R,
0E,
0D,
0C,
0B,
0A,
0@,
0?,
0>,
0=,
0<,
0;,
0:,
09,
08,
07,
06,
05,
04,
03,
02,
01,
00,
0/,
0.,
0-,
0,,
0+,
0*,
0),
0(,
0',
0&,
03+
02+
01+
00+
0/+
0.+
0-+
0,+
0++
0*+
0)+
0(+
0'+
0&+
0%+
0$+
0u*
0t*
0s*
0r*
0q*
0p*
0o*
0n*
0m*
0l*
0k*
0j*
0i*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
0a*
0`*
0_*
0^*
0]*
0\*
0[*
0Z*
0Y*
0X*
0W*
0V*
0c)
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0V)
0U)
0T)
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0E*
0D*
0C*
0B*
0A*
0@*
0?*
0>*
0=*
0<*
0;*
0:*
09*
08*
07*
06*
05*
04*
03*
02*
01*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0(*
0'*
0&*
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0s+
0r+
0q+
0p+
0o+
0n+
0m+
0l+
0k+
0j+
0i+
0h+
0g+
0f+
0e+
0d+
0c+
0b+
0a+
0`+
0_+
0^+
0]+
0\+
0[+
0Z+
0Y+
0X+
0W+
0V+
0U+
0T+
08#
07#
06#
05#
04#
03#
02#
01#
0C-
0B-
0A-
0@-
0?-
0>-
0=-
0<-
0;-
0:-
09-
08-
07-
06-
05-
04-
03-
02-
01-
00-
0/-
0.-
0--
0,-
0+-
0*-
0)-
0(-
0'-
0&-
0%-
0$-
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0u(
0t(
0s(
0r(
0q(
0p(
0o(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0@)
0?)
0>)
0=)
0<)
0;)
0:)
09)
08)
07)
06)
05)
04)
03)
02)
01)
00)
0/)
0.)
0-)
0,)
0+)
0*)
0))
0()
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0s)
0r)
0q)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0C+
0B+
0A+
0@+
0?+
0>+
0=+
0<+
0;+
0:+
09+
08+
07+
06+
05+
04+
0q,
0p,
0o,
0n,
0m,
0l,
0k,
0j,
0i,
0h,
0g,
0f,
0e,
0d,
0c,
0b,
0v-
0H,
0x*
0{*
0K,
0y-
0<'
0:'
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
0=(
0<(
0;(
0:(
09(
08(
07(
06(
0J)
0y*
0I,
0w-
0x-
0J,
0z*
0M)
0;'
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0K)
0L)
09'
0G
#10
0!
0L
#15
1!
1L
#20
0!
0L
#25
1!
1L
#30
0!
0L
#35
1!
1L
#40
0!
0L
#45
1!
1L
#50
0!
0L
#55
1!
1L
#60
0!
0L
#65
1!
1L
#70
0!
0L
#75
1!
1L
#80
0!
0L
#85
1!
1L
#90
0!
0L
#95
1!
1L
#100
0"
0!
0M
0L
#105
1!
1L
#110
0!
0L
#115
1!
1L
#120
0!
0L
#125
1!
1L
1%
1N
b1 c
#130
0!
0L
#135
1!
1L
0%
b1000000 #
b1 $
1Y
0X
0W
0V
0U
0T
0S
0R
0Q
1P
0O
0N
0I
b0 c
b1 b
b10 c
#140
0!
0L
#145
1!
1L
b10 b
1Z
b11 c
#150
0!
0L
#155
1!
1L
b11 b
b1 %(
1\
1[
0Z
1o
#160
0!
0L
#165
1!
1L
b1 d
b1000000 #(
b1 S)
b1 #+
b1 Q,
b1 !.
1,!
1)!
1&!
1#!
1f
1`"
1G*
0x
1w
1u+
0{
1z
1E-
0~
1}
1P"
1p"
1"#
12#
1B#
1Y(
0p"
1'(
17(
1q"
1T$
#170
0!
0L
#175
1!
1L
b10 d
b1000000000000000000000000000000 O)
b10000000000000 Q)
b100000000000000 !+
b10 #+
b100000000000000 O,
b10 Q,
b100000000000000 }-
b10 !.
0,!
1+!
1$$
0)!
1(!
1r#
0&!
1%!
1b#
1S#
1t$
16%
1**
0"#
1Z*
1W+
02#
1),
1%,
1$,
1",
1!,
1~+
1|+
1z+
1x+
1v+
0u+
1{
1'-
0B#
1W-
1S-
1R-
1P-
1O-
1N-
1L-
1J-
1H-
1F-
0E-
1~
1e-
1d-
1b-
1a-
1`-
1^-
1\-
1Z-
1X-
0W-
1T,
1C#
17,
16,
14,
13,
12,
10,
1.,
1,,
1*,
0),
1&+
13#
1W)
1$#
1g)
16+
13+
11+
10+
1/+
1-+
1++
1)+
1'+
0&+
1d,
1a,
1_,
1^,
1],
1[,
1Y,
1W,
1U,
0T,
1q,
1o,
1n,
1m,
1k,
1i,
1g,
1e,
0d,
1Y&
1X&
1W&
1C+
1A+
1@+
1?+
1=+
1;+
19+
17+
06+
1w%
18%
17%
06%
1w-
1x-
1&&
1$&
1#&
1"&
1~%
1|%
1z%
1x%
0w%
1f&
1e&
1a&
1_&
1]&
1[&
#180
0!
0L
#185
1!
1L
b11 d
b110000000000000000000000000000 }*
b1000000000000 !+
b10101010111010000000000000000 M,
b10000000000000 O,
b11 Q,
b11101010101000110000000000000000 {-
b10000000000000 }-
b11 !.
1,!
1%$
0$$
1('
1''
1#'
1!'
1}&
1{&
1y&
1x&
1w&
1)!
1s#
0r#
1F&
1D&
1C&
1B&
1@&
1>&
1<&
1:&
1d#
0b#
1X%
1W%
0x%
1v%
1Y+
0W+
19,
18,
07,
15,
03,
0*,
0f&
0e&
0a&
0_&
0]&
0[&
0Y&
0X&
0W&
1(-
0'-
1f-
0d-
1c-
0`-
1_-
0^-
1]-
0\-
1[-
0Z-
1Y-
0X-
0S-
0R-
0P-
0O-
0N-
0L-
0J-
0H-
0~
0}
1|
0w-
0x-
0f-
0e-
0c-
0b-
0a-
0_-
0]-
0[-
0a,
1`,
0],
1\,
0[,
1Z,
0Y,
1X,
0W,
1V,
0U,
1D#
0C#
12+
00+
0'+
15#
03#
1B+
0@+
07+
0q,
1p,
0m,
1l,
0k,
1j,
0i,
1h,
0g,
1f,
0e,
0`,
0_,
0^,
0\,
0Z,
0X,
0p,
0o,
0n,
0l,
0j,
0h,
1f&
1e&
1d&
1c&
1a&
1_&
1]&
1[&
1%&
0#&
1x%
1w%
0v%
0e&
1b&
0a&
1`&
0_&
1^&
0]&
1\&
#190
0!
0L
#195
1!
1L
b100 d
b110101010101110000000000000000 M,
b100000000000 O,
b1101010111010000000000000000 {-
b1000000000000 }-
b100 !.
0,!
0+!
1*!
1&$
0%$
0''
1&'
1%'
1$'
0#'
1"'
0!'
1~&
0}&
1|&
0y&
0x&
0w&
1u#
0s#
1E&
0C&
19&
1e&
0c&
1Y&
1*-
0(-
1[-
0Y-
1X,
0V,
1F#
0D#
1h,
0f,
1]&
0\&
0[&
1Z&
#200
0!
0L
#205
1!
1L
b101 d
1a
b110011010101110000000000000000 {-
b10000000000 }-
1F
1($
0&$
1''
0%'
1}&
0|&
0{&
1z&
1y&
1'
#210
0!
0L
#215
1!
1L
b110 d
#220
0!
0L
#225
1!
1L
b111 d
#230
0!
0L
#235
b100000 #
1!
1Q
0P
1L
b1000 d
b100000 #(
1g
0f
1a"
0`"
1Q"
0P"
1Z(
0Y(
1+*
0**
1Z+
0Y+
1+-
0*-
1G#
0F#
16#
05#
1%#
0$#
1[(
0Z(
1r"
0q"
1((
0'(
18(
07(
1s"
0r"
1U$
0T$
#240
0!
0L
#245
1!
1L
b1001 d
b100000000000000000000000000000 O)
b100000000000 Q)
b100000000000 !+
b10000000000 O,
b1000000000 }-
1)$
0($
1v#
0u#
1e#
0d#
1U#
0S#
1u$
0t$
07%
1(
0'
1-*
0+*
1\*
0Z*
1[+
0Z+
1:,
08,
17,
04,
13,
02,
11,
00,
1/,
0.,
1-,
0,,
1,-
0+-
1\-
0[-
1Y,
0X,
1H#
0G#
01+
10+
0/+
1.+
0-+
1,+
0++
1*+
0)+
17#
06#
1Y)
0W)
1'#
0%#
1i)
0g)
0A+
1@+
0?+
1>+
0=+
1<+
0;+
1:+
09+
1i,
0h,
0^&
0]&
1\&
0$&
1#&
0"&
1!&
0~%
1}%
0|%
1{%
0z%
1:%
19%
#250
0!
0L
#255
1!
1L
b1010 d
b11100000000000000000000000000 }*
b1000000000 !+
b110010101010110000000000000000 M,
b1000000000 O,
b110100010101110000000000000000 {-
b100000000 }-
1*$
0)$
0~&
0}&
1|&
1w#
0v#
0D&
1C&
0B&
1A&
0@&
1?&
0>&
1=&
0<&
1g#
0e#
1Z%
1Y%
0W%
1z%
1y%
0w%
1]+
0[+
1<,
1;,
0:,
18,
06,
0-,
0d&
1c&
0b&
1a&
0`&
1_&
1^&
0\&
1--
0,-
1]-
0\-
1Z,
0Y,
1I#
0H#
03+
0*+
19#
07#
0C+
0:+
1j,
0i,
0_&
0^&
1]&
0&&
0{%
#260
0!
0L
#265
1!
1L
b1011 d
b11100101010100000000000000000 M,
b10000000 O,
b110010001010110000000000000000 {-
b10000000 }-
1+$
0*$
0&'
1%'
0$'
1#'
0"'
1}&
0|&
1y#
0w#
0F&
0=&
1<&
1;&
09&
0f&
0]&
1\&
1[&
0Y&
1/-
0--
1_-
0]-
1\,
0Z,
1K#
0I#
1l,
0j,
0a&
1_&
#270
0!
0L
#275
1!
1L
b1100 d
b11100100010100000000000000000 {-
b100000 }-
1-$
0+$
0('
0#'
1!'
0}&
1|&
1{&
0y&
#280
0!
0L
#285
1!
1L
b1101 d
#290
0!
0L
#295
1!
1L
b1110 d
#300
0!
0L
#305
1!
1L
b1111 d
#310
0!
0L
#315
1!
1L
b0 d
#320
0!
0L
#325
1!
1L
b1 d
#330
0!
0L
#335
1!
1L
b10 d
#340
0!
0L
#345
1!
1L
b11 d
#350
0!
0L
#355
1!
1L
b100 d
#360
0!
0L
#365
1!
1L
b101 d
#370
0!
0L
#375
1!
1L
b110 d
#380
0!
0L
